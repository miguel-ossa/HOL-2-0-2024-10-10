      *****************************************************************
      *                 IDENTIFICATION     DIVISION                   *
      *****************************************************************
       IDENTIFICATION DIVISION.
      *
       PROGRAM-ID.      PTST1.
       AUTHOR.          LUIS MARTINEZ.
      *
      *****************************************************************
      **  PROYECTO .........: HOL                                    **
      **  PROGRAMA .........: PTST1                                  **
      **  VERSION ..........: 1.0                                    **
      **  TITULO ...........: PROGRAMA PARA PRUEBAS CICS             **
      **                                                             **
      **  TIPO .............:                                        **
      **     - LENGUAJE ...............: COBOL II                    **
      **     - ENTORNO ................: CICS                        **
      **     - BASE DE DATOS ..........: DB2                         **
      **                                                             **
      **  DESCRIPCION ......:                                        **
      **                                                             **
      **    - Acepta un DNI por pantalla y accede a DB2 para ver     **
      **      si existe algun registro en la tabla CLIENETS con      **
      **      esa clave primaria. Indica si el registro existe o no  **
      **      con un mensaje en pantalla o mostrando el nombre       **
      **                                                             **
      **  LOG DE MODIFICACIONES:                                     **
      **  FECHA----- DESCRIPCION------------------------------ BUSCA **
      **  2024-08-18 Adaptaci¢n multiidioma (MOSSA)            TXMUL **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      *****************************************************************
       ENVIRONMENT DIVISION.
      *
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.
      *
       DATA DIVISION.
      *----------------------------------------------------------------
       WORKING-STORAGE SECTION.
      *
      *--- Zona CICS --------------------------------------------------
      *
       COPY DFHAID.
       COPY DFHBMSCA.
       COPY TST1MP.
      * --- CICS COMMAREA APLICACION HOL -----------------------------
       COPY DDCICS.
      *
      *--- Zona CICS fin ----------------------------------------------
      *
      *--- Zona DB2 ---------------------------------------------------
      *
      *****EXEC SQL
      *****     INCLUDE SQLCA
      *****END-EXEC
        01 SQLCA.
           05 SQLCAID     PIC X(8).
           05 SQLCABC     PIC S9(9) COMP-4.
           05 SQLCODE     PIC S9(9) COMP-4.
           05 SQLERRM.
              49 SQLERRML PIC S9(4) COMP-4.
              49 SQLERRMC PIC X(70).
           05 SQLERRP     PIC X(8).
           05 SQLERRD     OCCURS 6 TIMES
                          PIC S9(9) COMP-4.
           05 SQLWARN.
              10 SQLWARN0 PIC X.
              10 SQLWARN1 PIC X.
              10 SQLWARN2 PIC X.
              10 SQLWARN3 PIC X.
              10 SQLWARN4 PIC X.
              10 SQLWARN5 PIC X.
              10 SQLWARN6 PIC X.
              10 SQLWARN7 PIC X.
           05 SQLEXT.
              10 SQLWARN8 PIC X.
              10 SQLWARN9 PIC X.
              10 SQLWARNA PIC X.
              10 SQLSTATE PIC X(5).
      *
      *****EXEC SQL
      *****     INCLUDE CLIENTES
      *****END-EXEC.
      ******************************************************************
      * DCLGEN TABLE(CLIENTES)                                         *
      *        LIBRARY(MCORNER.DB2.DCLGEN(CLIENTES))                   *
      *        ACTION(REPLACE)                                         *
      *        LANGUAGE(COBOL)                                         *
      *        NAMES(CL-)                                              *
      *        STRUCTURE(CL-CLIENTES)                                  *
      *        QUOTE                                                   *
      *        COLSUFFIX(YES)                                          *
      * ... IS THE DCLGEN COMMAND THAT MADE THE FOLLOWING STATEMENTS   *
      ******************************************************************
      *****EXEC SQL DECLARE CLIENTES TABLE
      *****( DNI                            CHAR(9) NOT NULL,
      *****  NOMBRE                         CHAR(20) NOT NULL,
      *****  APELLIDOS                      CHAR(20) NOT NULL,
      *****  DIRECCION                      CHAR(35) NOT NULL
      *****) END-EXEC.
      ******************************************************************
      * COBOL DECLARATION FOR TABLE CLIENTES                           *
      ******************************************************************
       01  CL-CLIENTES.
      *                       DNI
           10 CL-DNI               PIC X(9).
      *                       NOMBRE
           10 CL-NOMBRE            PIC X(20).
      *                       APELLIDOS
           10 CL-APELLIDOS         PIC X(20).
      *                       DIRECCION
           10 CL-DIRECCION         PIC X(35).
      ******************************************************************
      * THE NUMBER OF COLUMNS DESCRIBED BY THIS DECLARATION IS 4       *
      ******************************************************************
      * --- AREA DE DB2 PARA TRATAMIENTO DE ERRORES (VARIABLES HOST) -
      *****EXEC SQL
      *****     INCLUDE DDDB2
      *****END-EXEC
      * --- AREA DE DB2 PARA TRATAMIENTO DE ERRORES (VARIABLES HOST) -
      * --- VERSION 1.1
       01  DB2-AREA.
           03  DB2-CODE                     PIC S9(9).
           03  DB2-CODE-EDIT                PIC --------9.
           03  DB2-CODE-X                   PIC X(10).
           03  DB2-ERROR-MSG                PIC X(50).
      *
           03  DB2-IDIOMA                   PIC XX   VALUE 'ES'.
      *
      *--- TXMUL ->
      *    03  DB2-TABLA                    PIC X(8).
      *    03  DB2-CLAVE1                   PIC X(8).
      *    03  DB2-CLAVE2                   PIC X(8).
      *    03  DB2-CLAVE3                   PIC X(8).
      *    03  DB2-VALOR                    PIC X(80).
      *--- TXMUL <-
      *
           03  DB2-TABLA-TITULOS            PIC X(8) VALUE 'TITULMAP'.
           03  DB2-TABLA-TEXTOMAP           PIC X(8) VALUE 'TEXTOMAP'.
           03  DB2-TABLA-PROGRMSG           PIC X(8) VALUE 'PROGRMSG'.
      *
           03  DB2-COUNT1                   PIC S9(9) COMP-3.
           03  DB2-COUNT2                   PIC S9(9) COMP-3.
      *---------------------------------------------------------------
      *--- TXMUL ->
      *****EXEC SQL
      *****     INCLUDE TABLAS
      *****END-EXEC
      ******************************************************************
      * DCLGEN TABLE(TABLAS)                                           *
      *        LIBRARY(MCORNER.DB2.DCLGEN(TABLAS))                     *
      *        ACTION(REPLACE)                                         *
      *        LANGUAGE(COBOL)                                         *
      *        NAMES(TB-)                                              *
      *        STRUCTURE(TB-TABLAS)                                    *
      *        QUOTE                                                   *
      *        COLSUFFIX(YES)                                          *
      * ... IS THE DCLGEN COMMAND THAT MADE THE FOLLOWING STATEMENTS   *
      ******************************************************************
      *****EXEC SQL DECLARE TABLAS TABLE
      *****( TABLA                          CHAR(8) NOT NULL,
      *****  CLAVE1                         CHAR(8) NOT NULL,
      *****  CLAVE2                         CHAR(8),
      *****  CLAVE3                         CHAR(8),
      *****  VALOR                          CHAR(64) NOT NULL
      *****) END-EXEC.
      ******************************************************************
      * COBOL DECLARATION FOR TABLE TABLAS                             *
      ******************************************************************
       01  TB-TABLAS.
      *                       TABLA
           10 TB-TABLA             PIC X(8).
      *                       CLAVE1
           10 TB-CLAVE1            PIC X(8).
      *                       CLAVE2
           10 TB-CLAVE2            PIC X(8).
      *                       CLAVE3
           10 TB-CLAVE3            PIC X(8).
      *                       VALOR
           10 TB-VALOR             PIC X(64).
      ******************************************************************
      * THE NUMBER OF COLUMNS DESCRIBED BY THIS DECLARATION IS 5       *
      ******************************************************************
      *--- TXMUL <-
      *--- Zona DB2 fin -----------------------------------------------
      *
       01  FILLER                          PIC X(19)
           VALUE '***START-WORKING***'.
      *
       01  WC-CONSTANTES.
           03  WC-PROGRAMA                 PIC X(8)  VALUE 'PTST1'.
           03  WC-TRANSACCION              PIC X(4)  VALUE 'TST1'.
           03  WC-MAP                      PIC X(8)  VALUE 'TST1MP'.
           03  WC-MAPSET                   PIC X(8)  VALUE 'TST1MP'.
           03  WC-CURPOS                   PIC S9(4) VALUE +580.
           03  WC-COMMAREA-LENGTH          PIC S9(4) COMP VALUE 1024.
           03  WC-LONGITUD-TITULO          PIC 99    VALUE 74.
      *
       01  SW-SWITCHES.
           03 SW-ENVIO-MAPA                PIC X    VALUE '0'.
              88 ENVIO-ERASE                        VALUE '1'.
              88 ENVIO-DATAONLY                     VALUE '2'.
           03 SW-ERROR-VALIDACION          PIC 999  VALUE 0.
              88 DNI-VACIO                          VALUE 1.
      *
       01  WL-LITERALES.
           03  WL-FIN-SESION               PIC X(80) VALUE
               'La transaccion TST1 ha finalizado...'.
      *--- TXMUL ->
       77 IND                             PIC 99 VALUE ZERO.
      *--- TXMUL <-
      *--- USER ->
       77 USERO                           PIC X(6).
      *--- USER <-
      *
      *--- Zona para CALLs --------------------------------------------
      *
           COPY LKCENTI.
      *
       01 FILLER                           PIC X(17)
           VALUE '***END-WORKING***'.
      *----------------------------------------------------------------
        77 SQL-TEMP      PIC X(128).
        77 DSN-TEMP      PIC S9(9)  COMP-4.
        77 DSN-TMP2      PIC S9(18) COMP-3.
        77 DSNNROWS      PIC S9(9)  COMP-4.
        77 DSNNTYPE      PIC S9(4)  COMP-4.
        77 DSNNLEN       PIC S9(4)  COMP-4.
        77 SQL-NULL      PIC S9(9) COMP-4 VALUE +0.
        77 SQL-INIT-FLAG PIC S9(4) COMP-4 VALUE +0.
           88 SQL-INIT-DONE VALUE +1.
        77 SQL-FILE-READ      PIC S9(9) COMP-4 VALUE +2.
        77 SQL-FILE-CREATE    PIC S9(9) COMP-4 VALUE +8.
        77 SQL-FILE-OVERWRITE PIC S9(9) COMP-4 VALUE +16.
        77 SQL-FILE-APPEND    PIC S9(9) COMP-4 VALUE +32.
        01 SQL-PLIST6.
           05 SQL-PLIST-CON   PIC S9(9) COMP-4 VALUE +4211712.
           05 SQL-CALLTYPE    PIC S9(4) COMP-4 VALUE +30.
           05 SQL-PROG-NAME   PIC X(8)  VALUE X'5054535431202020'.
           05 SQL-TIMESTAMP-1 PIC S9(9) COMP-4 VALUE +469383384.
           05 SQL-TIMESTAMP-2 PIC S9(9) COMP-4 VALUE +387570368.
           05 SQL-SECTION     PIC S9(4) COMP-4 VALUE +1.
           05 SQL-CODEPTR     PIC S9(9) COMP-4.
           05 SQL-VPARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 SQL-APARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 FILLER          PIC S9(4) COMP-4 VALUE +1208.
           05 SQL-STMT-TYPE   PIC S9(4) COMP-4 VALUE +231.
           05 SQL-STMT-NUM    PIC S9(9) COMP-4 VALUE +468.
           05 SQL-PLIST-FLG   PIC S9(4) COMP-4 VALUE +0.
           05 FILLER          PIC X(18) VALUE
              X'000000000000000000000000000000000000'.
           05 SQL-PVAR-LIST6.
              10 PRE-SQLDAID  PIC X(8)  VALUE 'SQLDA  Ê'.
              10 PRE-SQLDABC  PIC S9(9) COMP-4 VALUE +60.
              10 PRE-SQLN     PIC S9(4) COMP-4 VALUE +1.
              10 PRE-SQLLD    PIC S9(4) COMP-4 VALUE +1.
              10 PRE-SQLVAR.
                12 SQLVAR-BASE1.
                  15 SQL-PVAR-TYPE1      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-PVAR-LEN1       PIC S9(4) COMP-4 VALUE +9.
                  15 SQL-PVAR-ADDRS1.
                     20 SQL-PVAR-ADDR1   PIC S9(9) COMP-4.
                     20 SQL-PVAR-IND1    PIC S9(9) COMP-4.
                  15 SQL-PVAR-NAME1.
                     20 SQL-PVAR-NAMEL1  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-PVAR-NAMEC1  PIC X(30) VALUE ' '.
           05 SQL-AVAR-LIST6.
              10 PRE-SQLDAID  PIC X(8)  VALUE 'SQLDA  Ê'.
              10 PRE-SQLDABC  PIC S9(9) COMP-4 VALUE +192.
              10 PRE-SQLN     PIC S9(4) COMP-4 VALUE +4.
              10 PRE-SQLLD    PIC S9(4) COMP-4 VALUE +4.
              10 PRE-SQLVAR.
                12 SQLVAR-BASE1.
                  15 SQL-AVAR-TYPE1      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-AVAR-LEN1       PIC S9(4) COMP-4 VALUE +9.
                  15 SQL-AVAR-ADDRS1.
                     20 SQL-AVAR-ADDR1   PIC S9(9) COMP-4.
                     20 SQL-AVAR-IND1    PIC S9(9) COMP-4.
                  15 SQL-AVAR-NAME1.
                     20 SQL-AVAR-NAMEL1  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-AVAR-NAMEC1  PIC X(30) VALUE ' '.
                12 SQLVAR-BASE2.
                  15 SQL-AVAR-TYPE2      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-AVAR-LEN2       PIC S9(4) COMP-4 VALUE +20.
                  15 SQL-AVAR-ADDRS2.
                     20 SQL-AVAR-ADDR2   PIC S9(9) COMP-4.
                     20 SQL-AVAR-IND2    PIC S9(9) COMP-4.
                  15 SQL-AVAR-NAME2.
                     20 SQL-AVAR-NAMEL2  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-AVAR-NAMEC2  PIC X(30) VALUE ' '.
                12 SQLVAR-BASE3.
                  15 SQL-AVAR-TYPE3      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-AVAR-LEN3       PIC S9(4) COMP-4 VALUE +20.
                  15 SQL-AVAR-ADDRS3.
                     20 SQL-AVAR-ADDR3   PIC S9(9) COMP-4.
                     20 SQL-AVAR-IND3    PIC S9(9) COMP-4.
                  15 SQL-AVAR-NAME3.
                     20 SQL-AVAR-NAMEL3  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-AVAR-NAMEC3  PIC X(30) VALUE ' '.
                12 SQLVAR-BASE4.
                  15 SQL-AVAR-TYPE4      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-AVAR-LEN4       PIC S9(4) COMP-4 VALUE +35.
                  15 SQL-AVAR-ADDRS4.
                     20 SQL-AVAR-ADDR4   PIC S9(9) COMP-4.
                     20 SQL-AVAR-IND4    PIC S9(9) COMP-4.
                  15 SQL-AVAR-NAME4.
                     20 SQL-AVAR-NAMEL4  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-AVAR-NAMEC4  PIC X(30) VALUE ' '.
        01 SQL-PLIST8.
           05 SQL-PLIST-CON   PIC S9(9) COMP-4 VALUE +4210688.
           05 SQL-CALLTYPE    PIC S9(4) COMP-4 VALUE +50.
           05 SQL-PROG-NAME   PIC X(8)  VALUE X'5054535431202020'.
           05 SQL-TIMESTAMP-1 PIC S9(9) COMP-4 VALUE +469383384.
           05 SQL-TIMESTAMP-2 PIC S9(9) COMP-4 VALUE +387570368.
           05 SQL-SECTION     PIC S9(4) COMP-4 VALUE +2.
           05 SQL-CODEPTR     PIC S9(9) COMP-4.
           05 SQL-VPARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 SQL-APARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 FILLER          PIC S9(4) COMP-4 VALUE +1208.
           05 SQL-STMT-TYPE   PIC S9(4) COMP-4 VALUE +3.
           05 SQL-STMT-NUM    PIC S9(9) COMP-4 VALUE +798.
           05 SQL-PLIST-FLG   PIC S9(4) COMP-4 VALUE +0.
           05 FILLER          PIC X(18) VALUE
              X'000000000000000000000000000000000000'.
           05 SQL-PVAR-LIST8.
              10 PRE-SQLDAID  PIC X(8)  VALUE 'SQLDA  Ê'.
              10 PRE-SQLDABC  PIC S9(9) COMP-4 VALUE +60.
              10 PRE-SQLN     PIC S9(4) COMP-4 VALUE +1.
              10 PRE-SQLLD    PIC S9(4) COMP-4 VALUE +1.
              10 PRE-SQLVAR.
                12 SQLVAR-BASE1.
                  15 SQL-PVAR-TYPE1      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-PVAR-LEN1       PIC S9(4) COMP-4 VALUE +8.
                  15 SQL-PVAR-ADDRS1.
                     20 SQL-PVAR-ADDR1   PIC S9(9) COMP-4.
                     20 SQL-PVAR-IND1    PIC S9(9) COMP-4.
                  15 SQL-PVAR-NAME1.
                     20 SQL-PVAR-NAMEL1  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-PVAR-NAMEC1  PIC X(30) VALUE ' '.
        01 SQL-PLIST9.
           05 SQL-PLIST-CON   PIC S9(9) COMP-4 VALUE +4195328.
           05 SQL-CALLTYPE    PIC S9(4) COMP-4 VALUE +30.
           05 SQL-PROG-NAME   PIC X(8)  VALUE X'5054535431202020'.
           05 SQL-TIMESTAMP-1 PIC S9(9) COMP-4 VALUE +469383384.
           05 SQL-TIMESTAMP-2 PIC S9(9) COMP-4 VALUE +387570368.
           05 SQL-SECTION     PIC S9(4) COMP-4 VALUE +2.
           05 SQL-CODEPTR     PIC S9(9) COMP-4.
           05 SQL-VPARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 SQL-APARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 FILLER          PIC S9(4) COMP-4 VALUE +1208.
           05 SQL-STMT-TYPE   PIC S9(4) COMP-4 VALUE +4.
           05 SQL-STMT-NUM    PIC S9(9) COMP-4 VALUE +808.
           05 SQL-PLIST-FLG   PIC S9(4) COMP-4 VALUE +0.
           05 FILLER          PIC X(18) VALUE
              X'000000000000000000000000000000000000'.
           05 SQL-AVAR-LIST9.
              10 PRE-SQLDAID  PIC X(8)  VALUE 'SQLDA  Ê'.
              10 PRE-SQLDABC  PIC S9(9) COMP-4 VALUE +148.
              10 PRE-SQLN     PIC S9(4) COMP-4 VALUE +3.
              10 PRE-SQLLD    PIC S9(4) COMP-4 VALUE +3.
              10 PRE-SQLVAR.
                12 SQLVAR-BASE1.
                  15 SQL-AVAR-TYPE1      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-AVAR-LEN1       PIC S9(4) COMP-4 VALUE +8.
                  15 SQL-AVAR-ADDRS1.
                     20 SQL-AVAR-ADDR1   PIC S9(9) COMP-4.
                     20 SQL-AVAR-IND1    PIC S9(9) COMP-4.
                  15 SQL-AVAR-NAME1.
                     20 SQL-AVAR-NAMEL1  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-AVAR-NAMEC1  PIC X(30) VALUE ' '.
                12 SQLVAR-BASE2.
                  15 SQL-AVAR-TYPE2      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-AVAR-LEN2       PIC S9(4) COMP-4 VALUE +8.
                  15 SQL-AVAR-ADDRS2.
                     20 SQL-AVAR-ADDR2   PIC S9(9) COMP-4.
                     20 SQL-AVAR-IND2    PIC S9(9) COMP-4.
                  15 SQL-AVAR-NAME2.
                     20 SQL-AVAR-NAMEL2  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-AVAR-NAMEC2  PIC X(30) VALUE ' '.
                12 SQLVAR-BASE3.
                  15 SQL-AVAR-TYPE3      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-AVAR-LEN3       PIC S9(4) COMP-4 VALUE +64.
                  15 SQL-AVAR-ADDRS3.
                     20 SQL-AVAR-ADDR3   PIC S9(9) COMP-4.
                     20 SQL-AVAR-IND3    PIC S9(9) COMP-4.
                  15 SQL-AVAR-NAME3.
                     20 SQL-AVAR-NAMEL3  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-AVAR-NAMEC3  PIC X(30) VALUE ' '.
        01 SQL-PLIST10.
           05 SQL-PLIST-CON   PIC S9(9) COMP-4 VALUE +4194304.
           05 SQL-CALLTYPE    PIC S9(4) COMP-4 VALUE +45.
           05 SQL-PROG-NAME   PIC X(8)  VALUE X'5054535431202020'.
           05 SQL-TIMESTAMP-1 PIC S9(9) COMP-4 VALUE +469383384.
           05 SQL-TIMESTAMP-2 PIC S9(9) COMP-4 VALUE +387570368.
           05 SQL-SECTION     PIC S9(4) COMP-4 VALUE +2.
           05 SQL-CODEPTR     PIC S9(9) COMP-4.
           05 SQL-VPARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 SQL-APARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 FILLER          PIC S9(4) COMP-4 VALUE +1208.
           05 SQL-STMT-TYPE   PIC S9(4) COMP-4 VALUE +5.
           05 SQL-STMT-NUM    PIC S9(9) COMP-4 VALUE +819.
           05 SQL-PLIST-FLG   PIC S9(4) COMP-4 VALUE +0.
           05 FILLER          PIC X(18) VALUE
              X'000000000000000000000000000000000000'.

       LINKAGE SECTION.
      *
       01 DFHCOMMAREA                      PIC X(2048).
      *
      *================================================================
       PROCEDURE DIVISION.
      *----------------------------------------------------------------
      *--- Proceso principal                                        ---
      *----------------------------------------------------------------
       DSNSQL SECTION.
       SQL-SKIP.
           GO TO SQL-INIT-END.
       SQL-INITIAL.
           MOVE 1 TO SQL-INIT-FLAG.
           CALL 'DSNHADDR' USING SQL-VPARMPTR OF SQL-PLIST6 SQL-PVAR-LIS
      -    T6.
           CALL 'DSNHADD2' USING SQL-PVAR-ADDRS1 IN
           SQL-PVAR-LIST6 CL-DNI OF CL-CLIENTES SQL-NULL
           CALL 'DSNHADDR' USING SQL-APARMPTR OF SQL-PLIST6 SQL-AVAR-LIS
      -    T6.
           CALL 'DSNHADD2' USING SQL-AVAR-ADDRS1 IN
           SQL-AVAR-LIST6 CL-DNI OF CL-CLIENTES SQL-NULL CL-NOMBRE OF CL
      -    -CLIENTES SQL-NULL CL-APELLIDOS OF CL-CLIENTES SQL-NULL CL-DI
      -    RECCION OF CL-CLIENTES SQL-NULL.
           CALL 'DSNHADDR' USING SQL-CODEPTR OF SQL-PLIST6 SQLCA.
           CALL 'DSNHADDR' USING SQL-VPARMPTR OF SQL-PLIST8 SQL-PVAR-LIS
      -    T8.
           CALL 'DSNHADD2' USING SQL-PVAR-ADDRS1 IN
           SQL-PVAR-LIST8 TB-CLAVE1 OF TB-TABLAS SQL-NULL
           CALL 'DSNHADDR' USING SQL-CODEPTR OF SQL-PLIST8 SQLCA.
           CALL 'DSNHADDR' USING SQL-APARMPTR OF SQL-PLIST9 SQL-AVAR-LIS
      -    T9.
           CALL 'DSNHADD2' USING SQL-AVAR-ADDRS1 IN
           SQL-AVAR-LIST9 TB-CLAVE2 OF TB-TABLAS SQL-NULL TB-CLAVE3 OF T
      -    B-TABLAS SQL-NULL TB-VALOR OF TB-TABLAS SQL-NULL.
           CALL 'DSNHADDR' USING SQL-CODEPTR OF SQL-PLIST9 SQLCA.
           CALL 'DSNHADDR' USING SQL-CODEPTR OF SQL-PLIST10 SQLCA.
       SQL-INIT-END.
           CONTINUE.

       0000-PROCESO-TAREA.
      *
      *--- CONTROL DE OPCIONES PARA PROGRAMAS CICS CON DB2          ---
      *
      *****EXEC SQL
      *****     INCLUDE PDOPCIDB
      *****END-EXEC
      *----------------------------------------------------------------
      *--- CONTROL DE OPCIONES PARA PROGRAMAS CICS CON DB2          ---
      *--- VERSION 1.0
      *----------------------------------------------------------------
      *--- INCLUIR ESTE COPY CON INCLUDE DE SQL EN TODOS LOS        ---
      *--- PROGRAMAS COBOL CON DB2 DENTRO DE LA PROCEDURE DIVISION. ---
      *--- AL METERLO CON INCLUDE DE SQL, EL PRE-COMPILADOR SQL     ---
      *--- LO TRADUCE Y, POR LO TANTO, SE PUEDEN UTILIZAR COMANDOS  ---
      *--- CICS IGUALMENTE.                                         ---
      *----------------------------------------------------------------
      *
           EXEC CICS
                SET TERMINAL(EIBTRMID) NOUCTRAN
           END-EXEC
      *
           EXEC CICS
                IGNORE CONDITION MAPFAIL
           END-EXEC
      *
      *****EXEC SQL
      *****     WHENEVER  SQLERROR    GO TO  G999-ERROR-DB2
      *****END-EXEC
      *
      *****EXEC SQL
      *****     WHENEVER  SQLWARNING  GO TO  G999-ERROR-DB2
      *****END-EXEC
      *
      *****EXEC SQL
      *****     WHENEVER  NOT FOUND   CONTINUE
      *****END-EXEC
      *
           CONTINUE.
      *
      *
           MOVE WC-TRANSACCION              TO WA-TRANSACCION
      *
           IF EIBCALEN > 0
              MOVE DFHCOMMAREA              TO CH-COMMAREA-HOL
           END-IF
      *
      *--- Evaluacion de Commarea y Teclas para identificar
      *--- los procesos que deban de ejecutarse
      *
           EVALUATE TRUE
      *
      *--- No hay Commarea
      *--- Se inicializa la Commarea y se envia mapa limpio
      *
               WHEN EIBCALEN = ZERO
                    MOVE LOW-VALUE          TO TST1MPO
                    INITIALIZE CH-COMMAREA-HOL
                    SET ENVIO-ERASE         TO TRUE
                    PERFORM 8000-ENVIO-MAPA
      *
      *--- Hay Commarea
      *--- El programa ha podido ser arrancado por XCTL desde otro
      *--- programa con XCTL como retorno al actual. En este caso
      *--- el campo ch-programa-retorno contiene algun valor.
      *--- En este caso inicializamos la Commarea y eviamos mapa limpio
      *
               WHEN EIBCALEN > ZERO AND CH-TRANS-RETORNO NOT = SPACES
                    MOVE LOW-VALUE          TO TST1MPO
                    INITIALIZE CH-COMMAREA-HOL
                    SET ENVIO-ERASE         TO TRUE
                    PERFORM 8000-ENVIO-MAPA
      *
      *--- Borrado de pantalla  - Mensaje y retorno a CICS
      *--- F3 tambien puede terminar esta transaccion
      *
               WHEN EIBAID = DFHCLEAR OR EIBAID = DFHPF3
                    MOVE LOW-VALUE          TO TST1MPO
                    PERFORM 8100-ENVIA-MENSAJE
                    PERFORM 8900-RETORNO-CICS
      *
      *--- Teclas de Att no hacemos nada
      *
               WHEN EIBAID = DFHPA1 OR DFHPA2 OR DFHPA3
                    CONTINUE
      *
      *--- Teclas de funcion Legales
      *--- Teclas que requieren un procesado del mapa
      *
               WHEN EIBAID = DFHENTER
                 OR EIBAID = DFHPF2
                 OR EIBAID = DFHPF1
                 OR EIBAID = DFHPF4
                    PERFORM 1000-PROCESO-MAPA
      *
      *--- Teclas ilegales
      *--- Teclas no programadas que se detectaran en proceso de mapa
      *
               WHEN OTHER
                    PERFORM 1000-PROCESO-MAPA
      *
           END-EVALUATE
      *
      *--- Terminamos el proceso con Return TransId
      *--- Volvemos a enganchar esta misma transaccion
      *
           PERFORM 8200-RETORNO-TRANS.
      *
       0000-PROCESO-TAREA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Procesa la pantalla segun tecla elegida por el usuario   ---
      *----------------------------------------------------------------
       1000-PROCESO-MAPA.
      *
      * Recuperamos el mapa desde el terminal
      *
           PERFORM 8400-RECIBE-MAPA
      *
           EVALUATE TRUE
      *
      *--- Enter: Validamos el mapa y si es correcto proceso Enter
      *
              WHEN EIBAID = DFHENTER
                   PERFORM 1100-VALIDA-MAPA
                   IF NOT DNI-VACIO
                      PERFORM 1200-PROCESO-ENTER
                      SET ENVIO-DATAONLY   TO TRUE
                   ELSE
                      SET ENVIO-DATAONLY   TO TRUE
                   END-IF
      *
      *--- F1: Se llama al programa de ayuda online
      *
              WHEN EIBAID = DFHPF1
                   PERFORM 1400-PROCESO-PF1
      *
      *--- F2: Se fuerza un error simulado de DB2 (Pruebas)
      *
              WHEN EIBAID = DFHPF2
                   PERFORM 1300-PROCESO-PF2
      *
      *--- F4: Obtener la longitud de un area de memoria
      *
              WHEN EIBAID = DFHPF4
                   PERFORM 1500-PROCESO-PF4
      *
      *-- Otras teclas: Se avisa con mensaje en pantalla y mapa limpio
      *
              WHEN OTHER
      *--- TXMUL ->
                   MOVE 'KEYERR'           TO CL-CLAVE1
                   PERFORM 20100-OBTENER-TEXTO
                   MOVE CL-VALOR           TO MSGO
      *            MOVE 'Tecla erronea...' TO MSGO
      *--- TXMUL <-
                   SET ENVIO-ERASE         TO TRUE
      *
           END-EVALUATE.
      *
           SET ENVIO-DATAONLY              TO TRUE
           PERFORM 8000-ENVIO-MAPA.
      *
       1000-PROCESO-MAPA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Valida los datos del mapa                                ---
      *----------------------------------------------------------------
       1100-VALIDA-MAPA.
      *
           IF FDNII = SPACES        OR
              FDNII = HIGH-VALUES   OR
              FDNII = LOW-VALUES
      *
      *--- DNI es campo obligatorio
      *
              SET DNI-VACIO                TO TRUE
      *--- TXMUL ->
              MOVE 'DNIOBL'                TO CL-CLAVE1
              PERFORM 20100-OBTENER-TEXTO
              MOVE CL-VALOR                TO MSGO
      *       MOVE 'El campo DNI debe rellenarse...'
      *         TO MSGO
      *--- TXMUL <-
           END-IF.
      *
       1100-VALIDA-MAPA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Procesa la tecla ENTER - Acceso a tabla OK/KO            ---
      *----------------------------------------------------------------
       1200-PROCESO-ENTER.
      *
           MOVE '1200-PROCESO-ENTER'       TO WA-PARRAFO
      *
           MOVE FDNII                      TO CL-DNI
           PERFORM 7000-DB2-CLIENTES-PK
      *
           IF SQLCODE = 0
              MOVE CL-NOMBRE               TO MSGO
           ELSE
      *--- TXMUL ->
              MOVE 'KEYERR'                TO CL-CLAVE1
              PERFORM 20100-OBTENER-TEXTO
              MOVE CL-VALOR                TO MSGO
      *       MOVE 'No existe este DNI...' TO MSGO
      *--- TXMUL <-
           END-IF.
      *
       1200-PROCESO-ENTER-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Procesa la tecla F2                                      ---
      *---    Simulamos una deteccion de error de DB2 que provoca   ---
      *---    una interrupcion automatica de flujo de programa    ---
      *---    que a todos los efectos es como un GO TO de COBOL   ---
      *----------------------------------------------------------------
       1300-PROCESO-PF2.
      *
           GO TO G999-ERROR-DB2.
      *
       1300-PROCESO-PF2-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Procesa la tecla F1                                      ---
      *---    Llamamos al programa de visualizacion de ayuda        ---
      *----------------------------------------------------------------
       1400-PROCESO-PF1.
      *
           MOVE CS-PGM-AYUDAOL             TO CH-XCTL
           MOVE WC-TRANSACCION             TO CH-TRANSACCION
           MOVE WC-TRANSACCION             TO CH-TRANS-RETORNO
           MOVE WC-PROGRAMA                TO CH-PROGRAMA-RETORNO
           PERFORM 8700-LLAMAR-PROGRAMA.
      *
       1400-PROCESO-PF1-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Procesa la tecla F4                                      ---
      *---    Muestra la longitud de la COMMAREA                    ---
      *----------------------------------------------------------------
       1500-PROCESO-PF4.
      *
           MOVE LENGTH OF CH-COMMAREA-HOL      TO FLONO.
      *
       1500-PROCESO-PF4-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- DB2 - SELECT CLIENTES POR DNI (PK)                       ---
      *----------------------------------------------------------------
       7000-DB2-CLIENTES-PK.
      *
      *****EXEC SQL
      *****     SELECT
      *****        DNI
      *****      , NOMBRE
      *****      , APELLIDOS
      *****      , DIRECCION
      *****     INTO
      *****        :CL-DNI
      *****      , :CL-NOMBRE
      *****      , :CL-APELLIDOS
      *****      , :CL-DIRECCION
      *****     FROM CLIENTES
      *****     WHERE
      *****        DNI = :CL-DNI
      *****END-EXEC.
           PERFORM SQL-INITIAL UNTIL SQL-INIT-DONE
           CALL 'DSNHLI' USING SQL-PLIST6
           IF SQLCODE < 0 GO TO G999-ERROR-DB2 ELSE
           IF SQLCODE > 0 AND SQLCODE NOT = 100
           OR SQLWARN0 = 'W' GO TO G999-ERROR-DB2 ELSE
           MOVE 1 TO SQL-INIT-FLAG
           END-IF
           END-IF.
      *
       7000-DB2-CLIENTES-PK-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Envia el mapa al terminal sergun modo del switch         ---
      *----------------------------------------------------------------
       8000-ENVIO-MAPA.
      *
           EVALUATE TRUE
               WHEN ENVIO-ERASE
      *
      *--- Envio de mapa limpio
      *
      *--- TXMUL ->
                   MOVE 70 TO RTC-CENTER-AREA
                   PERFORM 20000-TITULO-MAPA
      * Carga de los textos fijos del mapa
                   MOVE WC-TRANSACCION TO TB-CLAVE1
                   PERFORM 20200-OPEN-CURSOR-MAPS
                   PERFORM WITH TEST AFTER UNTIL SQLCODE = 100
                       PERFORM 20200-FETCH-CURSOR-MAPS
                       IF SQLCODE NOT = 100 AND
                          TB-CLAVE3 = CL-IDIOMA THEN
                          ADD 1 TO IND
                          EVALUATE IND
                             WHEN 1
                                MOVE TB-VALOR TO TX10O
                             WHEN 2
                                MOVE TB-VALOR TO TX20O
                             WHEN 3
                                MOVE TB-VALOR TO TX30O
                             WHEN 4
                                MOVE TB-VALOR TO TX40O
                             WHEN 5
                                MOVE TB-VALOR TO TX50O
                             WHEN 6
                                MOVE TB-VALOR TO TX60O
                          END-EVALUATE
                       END-IF
                   END-PERFORM
                   PERFORM 20200-CLOSE-CURSOR-MAPS
      *--- TXMUL <-
                   EXEC CICS
                       SEND MAP    ('TST1MP')
                            MAPSET ('TST1MP')
                            FROM   (TST1MPO)
                            ERASE
                   END-EXEC
      *
      *--- Envio del mapa Solo datos
      *
               WHEN ENVIO-DATAONLY
                   EXEC CICS
                       SEND MAP     ('TST1MP')
                            MAPSET  ('TST1MP')
                            FROM    (TST1MPO)
                            DATAONLY
                   END-EXEC
      *
           END-EVALUATE.
      *
       8000-ENVIO-MAPA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Envia un mensaje al terminal del usuario (fin sesion)    ---
      *----------------------------------------------------------------
       8100-ENVIA-MENSAJE.
      *
      *--- TXMUL ->
           MOVE 'HOL1END'                  TO CL-CLAVE1.
           PERFORM 20100-OBTENER-TEXTO.
           MOVE CL-VALOR                   TO WL-FIN-SESION.
      * 'La transaccion TST1 ha finalizado...'
      *--- TXMUL <-
           EXEC CICS
               SEND TEXT FROM(WL-FIN-SESION)
                         ERASE
                         FREEKB
           END-EXEC.
      *
       8100-ENVIA-MENSAJE-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Devuelve el control a una transaccion                    ---
      *----------------------------------------------------------------
       8200-RETORNO-TRANS.
      *
           EXEC CICS
               RETURN
               TRANSID      (WA-TRANSACCION)
               COMMAREA     (CH-COMMAREA-HOL)
           END-EXEC.
      *
       8200-RETORNO-TRANS-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Recibe el mapa de la tarea                               ---
      *----------------------------------------------------------------
       8400-RECIBE-MAPA.
      *
           EXEC CICS
                RECEIVE
                MAP     ('TST1MP')
                MAPSET  ('TST1MP')
                INTO    (TST1MPI)
           END-EXEC
      *
           PERFORM 8410-MAYUSCULAS.
      *
       8400-RECIBE-MAPA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Transforma a mayusculas los datos sensibles              ---
      *----------------------------------------------------------------
       8410-MAYUSCULAS.
      *
           MOVE FUNCTION UPPER-CASE(FDNII)  TO FDNIO.
      *
       8410-MAYUSCULAS-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Llama a otro programa CICS por LINK con Commarea         ---
      *----------------------------------------------------------------
       8500-LINK-PROGRAMA.
      *
           EXEC CICS
                LINK
                PROGRAM (CH-LINK)
                COMMAREA(CH-COMMAREA-HOL)
                LENGTH  (LENGTH OF CH-COMMAREA-HOL)
           END-EXEC.
      *
       8500-LINK-PROGRAMA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Cede el control a otro programa CICS                     ---
      *----------------------------------------------------------------
       8700-LLAMAR-PROGRAMA.
      *
           EXEC CICS
                SET TERMINAL(EIBTRMID) UCTRAN
           END-EXEC
      *
           EXEC CICS
               XCTL PROGRAM  (CH-XCTL)
                    COMMAREA (CH-COMMAREA-HOL)
                    RESP     (WA-RESPUESTA-CICS)
           END-EXEC.
      *
       8700-LLAMAR-PROGRAMA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- CEDF vicualiza una traza - Quitar para produccion        ---
      *----------------------------------------------------------------
       8800-TRAZA.
      *
           EXEC CICS
               ENTER       TRACEID(0)
               FROM        (WA-TRAZA)
           END-EXEC.
      *
       8800-TRAZA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Devuelve el control a CICS - Salida total                ---
      *----------------------------------------------------------------
       8900-RETORNO-CICS.
      *
           EXEC CICS
                SET TERMINAL(EIBTRMID) UCTRAN
           END-EXEC
      *
           EXEC CICS
                RETURN
           END-EXEC.
      *
       8900-RETORNO-CICS-EXIT.
           EXIT.
      *--- TXMUL ->
      *
      * Rutinas multiidioma
      *
      *****EXEC SQL
      *****     INCLUDE PTXMUL
      *****END-EXEC.
      *****************************************************************
      **  PROYECTO .........: HOL                                    **
      **  PROGRAMA .........: FPROC1                                 **
      **  VERSION ..........: 1.0                                    **
      **  TITULO ...........: PROCEDIMIENTOS COMPARTIDOS             **
      **                                                             **
      **  TIPO .............:                                        **
      **     - LENGUAJE ...............: COBOL II                    **
      **     - ENTORNO ................: CICS                        **
      **     - BASE DE DATOS ..........: DB2                         **
      **                                                             **
      **  DESCRIPCION ......:                                        **
      **                                                             **
      **    - Procedimientos de uso general en programas.            **
      **                                                             **
      **  LOG DE MODIFICACIONES:                                     **
      **  FECHA----- DESCRIPCION------------------------------ BUSCA **
      **  2024-08-19 Adaptaci¢n multiidioma (MOSSA)            TXMUL **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      *****************************************************************
      *--- TXMUL ->
      *----------------------------------------------------------------
      *--- Recuperar el titulo del mapa LNKTL    de tabla: TABLAS   ---
      *----------------------------------------------------------------
       20000-TITULO-MAPA.
      *==================
           PERFORM 20000-TITULO-MAPA-INI.
           PERFORM 20000-TITULO-MAPA-FIN.
       20000-TITULO-MAPA-EXIT.
           EXIT.
      *
       20000-TITULO-MAPA-INI.
      *======================
      *
           MOVE '100000-TITULO-MAPA'         TO WA-PARRAFO.
           MOVE DB2-TABLA-TITULOS            TO CL-TABLA.
           MOVE WC-TRANSACCION               TO CL-CLAVE1.
           MOVE LOW-VALUES                   TO CL-CLAVE2.
           MOVE CL-IDIOMA                    TO CL-CLAVE3.
           MOVE CS-PGM-TABLA-TITULO          TO CH-LINK.
      *
       20000-TITULO-MAPA-INI-EXIT.
           EXIT.
      *
       20000-TITULO-MAPA-FIN.
      *=======================
      *
           PERFORM 8500-LINK-PROGRAMA.
      *
           EVALUATE TRUE
              WHEN CL-RESULTADO = '00' OR CL-RESULTADO = '01'
      *--- USER ->
      *            MOVE WC-LONGITUD-TITULO
      *              TO LKC-LONGITUD-RESULTADO
      *--- USER <-
      *
      *--- Centrado del titulo del mapa CALL
                   MOVE CL-VALOR           TO RTC-INPUT-STRING
                   CALL CS-PGM-CALL-RTCENTI USING RTC-CENTI
                   IF RTC-RESULT = ZERO THEN
                      MOVE RTC-OUTPUT-STRING TO TITLEO
                   ELSE
                      MOVE RTC-INPUT-STRING  TO TITLEO
                   END-IF
      *
              WHEN CL-RESULTADO = '99'
                   MOVE '20000-TITULO-MAPA'         TO WA-PARRAFO
                   MOVE 'LNKTITLE KO'               TO CH-E-ACCION,
      *--- TXMUL ->
                                                       CL-VALOR
      *--- TXMUL <-
                   MOVE -999999999                  TO SQLCODE
                   MOVE 'SQLMSG?'                   TO SQLERRMC
                   PERFORM G999-ERROR-DB2
           END-EVALUATE.
      *--- Mostrar el usuario en la esquina superior izquierda
           MOVE SPACES TO USERO.
           STRING "(" US-USER ")"
                  DELIMITED BY SPACES
                INTO USERO
           END-STRING.
      *
       20000-TITULO-MAPA-FIN-EXIT.
           EXIT.
      *
      *----------------------------------------------------------------
      *--- Obtener texto fijo con prog LNKTL     de tabla: TABLAS   ---
      *----------------------------------------------------------------
       20100-OBTENER-TEXTO.
      *
           MOVE '20100-OBTENER-TEXTO'        TO WA-PARRAFO.
           MOVE DB2-TABLA-PROGRMSG           TO CL-TABLA.
           MOVE LOW-VALUES                   TO CL-CLAVE2.
           MOVE CL-IDIOMA                    TO CL-CLAVE3.
           MOVE CS-PGM-TABLA-TITULO          TO CH-LINK.
           PERFORM 8500-LINK-PROGRAMA.
           IF CL-RESULTADO = '99' THEN
              IF CS-PGM-TABLA-TITULO NOT = CS-PGM-ERROR THEN
                 MOVE '20100-OBTENER-TEXTO'       TO WA-PARRAFO
                 MOVE 'LNKTEXTO KO'               TO CH-E-ACCION,
                                                     CL-VALOR
                 MOVE -999999999                  TO SQLCODE
                 MOVE 'SQLMSG?'                   TO SQLERRMC
                 PERFORM G999-ERROR-DB2
              ELSE
                 MOVE 'FATAL ERROR' TO MSGO
                 SET ENVIO-DATAONLY TO TRUE
                 PERFORM 8000-ENVIO-MAPA
              END-IF
           END-IF.
      *
       20100-OBTENER-TEXTO-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Declaraci¢n y apertura del cursor de textos para mapas   ---
      *----------------------------------------------------------------
       20200-OPEN-CURSOR-MAPS.
      *****EXEC SQL
      *****   DECLARE TXT-CUR CURSOR FOR
      *****      SELECT CLAVE2, CLAVE3, VALOR
      *****        FROM TABLAS
      *****        WHERE TABLA = 'TEXTOMAP'
      *****          AND CLAVE1 = :TB-CLAVE1
      *****END-EXEC.
      *
      *****EXEC SQL
      *****   OPEN TXT-CUR
      *****END-EXEC.
           PERFORM SQL-INITIAL UNTIL SQL-INIT-DONE
           CALL 'DSNHLI' USING SQL-PLIST8
           IF SQLCODE < 0 GO TO G999-ERROR-DB2 ELSE
           IF SQLCODE > 0 AND SQLCODE NOT = 100
           OR SQLWARN0 = 'W' GO TO G999-ERROR-DB2 ELSE
           MOVE 1 TO SQL-INIT-FLAG
           END-IF
           END-IF.
       20200-OPEN-CURSOR-MAPS-FIN.
           EXIT.
      *----------------------------------------------------------------
      *--- Fetch del cursor para obtener textos para mapas          ---
      *----------------------------------------------------------------
       20200-FETCH-CURSOR-MAPS.
      *
      *****EXEC SQL
      *****   FETCH TXT-CUR
      *****      INTO :TB-CLAVE2, :TB-CLAVE3, :TB-VALOR
      *****END-EXEC.
           PERFORM SQL-INITIAL UNTIL SQL-INIT-DONE
           CALL 'DSNHLI' USING SQL-PLIST9
           IF SQLCODE < 0 GO TO G999-ERROR-DB2 ELSE
           IF SQLCODE > 0 AND SQLCODE NOT = 100
           OR SQLWARN0 = 'W' GO TO G999-ERROR-DB2 ELSE
           MOVE 1 TO SQL-INIT-FLAG
           END-IF
           END-IF.
       20200-FETCH-CURSOR-MAPS-FIN.
           EXIT.
      *----------------------------------------------------------------
      *--- Cierre del cursor para obtener textos para mapas         ---
      *----------------------------------------------------------------
       20200-CLOSE-CURSOR-MAPS.
      *
      *****EXEC SQL
      *****   CLOSE TXT-CUR
      *****END-EXEC.
           PERFORM SQL-INITIAL UNTIL SQL-INIT-DONE
           CALL 'DSNHLI' USING SQL-PLIST10
           IF SQLCODE < 0 GO TO G999-ERROR-DB2 ELSE
           IF SQLCODE > 0 AND SQLCODE NOT = 100
           OR SQLWARN0 = 'W' GO TO G999-ERROR-DB2 ELSE
           MOVE 1 TO SQL-INIT-FLAG
           END-IF
           END-IF.
       20200-CLOSE-CURSOR-MAPS-FIN.
           EXIT.
      *--- TXMUL <-
      *
      *--- TXMUL <-
      *----------------------------------------------------------------
      *--- DB2 Un error ha sido detectado. Se ha forzado el proceso ---
      *----------------------------------------------------------------
       G999-ERROR-DB2.
      *
           IF EIBAID = DFHPF2
              MOVE WA-PARRAFO              TO CH-E-PARRAFO
              MOVE -111111111              TO DB2-CODE
              MOVE DB2-CODE                TO DB2-CODE-EDIT
              MOVE DB2-CODE-EDIT           TO CH-E-CODIGO
              MOVE 'ALGUN ERROR DB2'       TO CH-E-MENSAJE
              MOVE WC-PROGRAMA             TO CH-E-PROGRAMA
              MOVE WC-TRANSACCION          TO CH-E-TRANSACCION
              MOVE 'FORZAR ERROR'          TO CH-E-ACCION
              MOVE CS-PGM-ERROR            TO CH-XCTL
              MOVE WC-TRANSACCION          TO CH-TRANS-RETORNO
              MOVE WC-PROGRAMA             TO CH-PROGRAMA-RETORNO
              PERFORM 8700-LLAMAR-PROGRAMA
           ELSE
              MOVE WA-PARRAFO              TO CH-E-PARRAFO
              MOVE SQLCODE                 TO DB2-CODE
              MOVE DB2-CODE                TO DB2-CODE-EDIT
              MOVE DB2-CODE-EDIT           TO CH-E-CODIGO
              MOVE SQLERRMC                TO CH-E-MENSAJE
              MOVE WC-PROGRAMA             TO CH-E-PROGRAMA
              MOVE WC-TRANSACCION          TO CH-E-TRANSACCION
              MOVE 'Select PK Clientes'    TO CH-E-ACCION
              MOVE CS-PGM-ERROR            TO CH-XCTL
              MOVE WC-TRANSACCION          TO CH-TRANS-RETORNO
              MOVE WC-PROGRAMA             TO CH-PROGRAMA-RETORNO
              PERFORM 8700-LLAMAR-PROGRAMA
           END-IF.
      *
       G999-ERROR-DB2-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *-------------------- FIN DE PROGRAMA  --------------------------
      *----------------------------------------------------------------
