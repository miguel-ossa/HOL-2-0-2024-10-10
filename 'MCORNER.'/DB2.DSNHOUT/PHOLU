      *****************************************************************
      *                 IDENTIFICATION     DIVISION                   *
      *****************************************************************
       IDENTIFICATION DIVISION.
      *
       PROGRAM-ID.      PHOLU.
       AUTHOR.          LUIS MARTINEZ.
      *
      *****************************************************************
      **  PROYECTO .........: HOL                                    **
      **  PROGRAMA .........: PHOLU                                  **
      **  VERSION ..........: 1.0                                    **
      **  TITULO ...........: EMISIàN DE LISTADOS CON PARµMETROS     **
      **                                                             **
      **  TIPO .............:                                        **
      **     - LENGUAJE ...............: COBOL II                    **
      **     - ENTORNO ................: CICS                        **
      **     - BASE DE DATOS ..........: DB2                         **
      **                                                             **
      **  DESCRIPCION ......:                                        **
      **                                                             **
      **    - HOLU No recibe ninguna commarea especial desde HOLM    **
      **                                                             **
      **    - Permite generar listados por Batch con todos los       **
      **      par metros de Ordenaci¢n y Filtrado de la HOLS         **
      **                                                             **
      **    - Los listados se obtienen por escritura en Spool al     **
      **      Internal Reader de un JCL embebido en Working Storage  **
      **      Seg£n sean los par metros de pantalla, se validan, y   **
      **      se modifican los PARMS de ejecuci¢n din micamente,     **
      **      antes de cerrar el Spool, y por lo tanto, emitir el Job**
      **                                                             **
      **  LOG DE MODIFICACIONES:                                     **
      **  FECHA----- DESCRIPCION------------------------------ BUSCA **
      **  2024-01-19 Creaci¢n del programa                     CB001 **
      **  2024-08-18 Adaptaci¢n multiidioma (MOSSA)            TXMUL **
      **  2024-09-24 Multiusuario (MOSSA)                      USER  **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      *****************************************************************
       ENVIRONMENT DIVISION.
      *
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.
      *
       DATA DIVISION.
      *----------------------------------------------------------------
       WORKING-STORAGE SECTION.
      *
      *--- Zona CICS --------------------------------------------------
      *
           COPY DFHAID.
           COPY DFHBMSCA.
           COPY CICSATTR.
           COPY HOLUMP.
           COPY DDCICS.
      *
      *--- Zona CICS fin ----------------------------------------------
      *
      *--- Zona DB2 ---------------------------------------------------
      *
      *****EXEC SQL
      *****     INCLUDE SQLCA
      *****END-EXEC
        01 SQLCA.
           05 SQLCAID     PIC X(8).
           05 SQLCABC     PIC S9(9) COMP-4.
           05 SQLCODE     PIC S9(9) COMP-4.
           05 SQLERRM.
              49 SQLERRML PIC S9(4) COMP-4.
              49 SQLERRMC PIC X(70).
           05 SQLERRP     PIC X(8).
           05 SQLERRD     OCCURS 6 TIMES
                          PIC S9(9) COMP-4.
           05 SQLWARN.
              10 SQLWARN0 PIC X.
              10 SQLWARN1 PIC X.
              10 SQLWARN2 PIC X.
              10 SQLWARN3 PIC X.
              10 SQLWARN4 PIC X.
              10 SQLWARN5 PIC X.
              10 SQLWARN6 PIC X.
              10 SQLWARN7 PIC X.
           05 SQLEXT.
              10 SQLWARN8 PIC X.
              10 SQLWARN9 PIC X.
              10 SQLWARNA PIC X.
              10 SQLSTATE PIC X(5).
      *
      *****EXEC SQL
      *****     INCLUDE CLIENTES
      *****END-EXEC
      ******************************************************************
      * DCLGEN TABLE(CLIENTES)                                         *
      *        LIBRARY(MCORNER.DB2.DCLGEN(CLIENTES))                   *
      *        ACTION(REPLACE)                                         *
      *        LANGUAGE(COBOL)                                         *
      *        NAMES(CL-)                                              *
      *        STRUCTURE(CL-CLIENTES)                                  *
      *        QUOTE                                                   *
      *        COLSUFFIX(YES)                                          *
      * ... IS THE DCLGEN COMMAND THAT MADE THE FOLLOWING STATEMENTS   *
      ******************************************************************
      *****EXEC SQL DECLARE CLIENTES TABLE
      *****( DNI                            CHAR(9) NOT NULL,
      *****  NOMBRE                         CHAR(20) NOT NULL,
      *****  APELLIDOS                      CHAR(20) NOT NULL,
      *****  DIRECCION                      CHAR(35) NOT NULL
      *****) END-EXEC.
      ******************************************************************
      * COBOL DECLARATION FOR TABLE CLIENTES                           *
      ******************************************************************
       01  CL-CLIENTES.
      *                       DNI
           10 CL-DNI               PIC X(9).
      *                       NOMBRE
           10 CL-NOMBRE            PIC X(20).
      *                       APELLIDOS
           10 CL-APELLIDOS         PIC X(20).
      *                       DIRECCION
           10 CL-DIRECCION         PIC X(35).
      ******************************************************************
      * THE NUMBER OF COLUMNS DESCRIBED BY THIS DECLARATION IS 4       *
      ******************************************************************
      *
      *****EXEC SQL
      *****     INCLUDE DDDB2
      *****END-EXEC
      * --- AREA DE DB2 PARA TRATAMIENTO DE ERRORES (VARIABLES HOST) -
      * --- VERSION 1.1
       01  DB2-AREA.
           03  DB2-CODE                     PIC S9(9).
           03  DB2-CODE-EDIT                PIC --------9.
           03  DB2-CODE-X                   PIC X(10).
           03  DB2-ERROR-MSG                PIC X(50).
      *
           03  DB2-IDIOMA                   PIC XX   VALUE 'ES'.
      *
      *--- TXMUL ->
      *    03  DB2-TABLA                    PIC X(8).
      *    03  DB2-CLAVE1                   PIC X(8).
      *    03  DB2-CLAVE2                   PIC X(8).
      *    03  DB2-CLAVE3                   PIC X(8).
      *    03  DB2-VALOR                    PIC X(80).
      *--- TXMUL <-
      *
           03  DB2-TABLA-TITULOS            PIC X(8) VALUE 'TITULMAP'.
           03  DB2-TABLA-TEXTOMAP           PIC X(8) VALUE 'TEXTOMAP'.
           03  DB2-TABLA-PROGRMSG           PIC X(8) VALUE 'PROGRMSG'.
      *
           03  DB2-COUNT1                   PIC S9(9) COMP-3.
           03  DB2-COUNT2                   PIC S9(9) COMP-3.
      *---------------------------------------------------------------
      *--- TXMUL ->
      *****EXEC SQL
      *****     INCLUDE TABLAS
      *****END-EXEC
      ******************************************************************
      * DCLGEN TABLE(TABLAS)                                           *
      *        LIBRARY(MCORNER.DB2.DCLGEN(TABLAS))                     *
      *        ACTION(REPLACE)                                         *
      *        LANGUAGE(COBOL)                                         *
      *        NAMES(TB-)                                              *
      *        STRUCTURE(TB-TABLAS)                                    *
      *        QUOTE                                                   *
      *        COLSUFFIX(YES)                                          *
      * ... IS THE DCLGEN COMMAND THAT MADE THE FOLLOWING STATEMENTS   *
      ******************************************************************
      *****EXEC SQL DECLARE TABLAS TABLE
      *****( TABLA                          CHAR(8) NOT NULL,
      *****  CLAVE1                         CHAR(8) NOT NULL,
      *****  CLAVE2                         CHAR(8),
      *****  CLAVE3                         CHAR(8),
      *****  VALOR                          CHAR(64) NOT NULL
      *****) END-EXEC.
      ******************************************************************
      * COBOL DECLARATION FOR TABLE TABLAS                             *
      ******************************************************************
       01  TB-TABLAS.
      *                       TABLA
           10 TB-TABLA             PIC X(8).
      *                       CLAVE1
           10 TB-CLAVE1            PIC X(8).
      *                       CLAVE2
           10 TB-CLAVE2            PIC X(8).
      *                       CLAVE3
           10 TB-CLAVE3            PIC X(8).
      *                       VALOR
           10 TB-VALOR             PIC X(64).
      ******************************************************************
      * THE NUMBER OF COLUMNS DESCRIBED BY THIS DECLARATION IS 5       *
      ******************************************************************
      *--- TXMUL <-
      *--- Zona DB2 fin -----------------------------------------------
      *
       01  FILLER                          PIC X(19)
           VALUE '***START-WORKING***'.
      *
       01  WC-CONSTANTES.
           03  WC-PROGRAMA                 PIC X(8)  VALUE 'PHOLU'.
           03  WC-TRANSACCION              PIC X(4)  VALUE 'HOLU'.
           03  WC-MAP                      PIC X(8)  VALUE 'HOLUMP'.
           03  WC-MAPSET                   PIC X(8)  VALUE 'HOLUMP'.
           03  WC-CURPOS                   PIC S9(4) VALUE +355.
      *--- USER ->
      *    03  WC-LONGITUD-TITULO          PIC 99    VALUE 69.
      *--- USER <-
           03  WC-JCL-LENGTH               PIC 9(8)  COMP VALUE 80.
      *
       01  SW-SWITCHES.
           03 SW-ENVIO-MAPA                PIC X    VALUE '0'.
              88 ENVIO-ERASE                        VALUE '1'.
              88 ENVIO-DATAONLY                     VALUE '2'.
      *
           03 SW-ERROR-VALIDACION          PIC 999  VALUE 0.
              88 ERROR-VALIDACION                   VALUE 1.
           03 SW-ERROR-CRITERIOS           PIC 999  VALUE 0.
              88 ERROR-CRITERIOS                    VALUE 1.
           03 SW-ERROR-TIPOS               PIC 999  VALUE 0.
              88 ERROR-TIPOS                        VALUE 1.
           03 SW-ERROR-FILTROS             PIC 999  VALUE 0.
              88 ERROR-FILTROS                      VALUE 1.
      *
       01  WL-LITERALES.
           03  WL-FIN-SESION               PIC X(80) VALUE
               'La transaccion HOLU ha finalizado...'.
      *
       01  WX-PARMS.
           03  PARM-CUR1                   PIC X.
           03  PARM-CUR2                   PIC X.
           03  PARM-COMI                   PIC X.
           03  PARM-CONT                   PIC X.
           03  PARM-TXTO                   PIC X(35).
      *
       01  WX-VARIABLES.
           03  COUNT-ORD                   PIC 9.
           03  COUNT-ASC                   PIC 9.
           03  COUNT-COM                   PIC 9.
      *
       01  WC-ABEND.
           03  WC-SPOOL-OPEN               PIC X(4)   VALUE 'U701'.
           03  WC-SPOOL-WRITE              PIC X(4)   VALUE 'U702'.
           03  WC-SPOOL-CLOSE              PIC X(4)   VALUE 'U703'.
      *
       01  WX-ABEND                        PIC X(4)   VALUE SPACES.
       01  JCL-STATEMENT                   PIC X(80)  VALUE SPACES.
      *
      * Zona especial para CICS -> SPOOL
      *
       01  RESP                            PIC 9(8)   BINARY.
       01  RESP2                           PIC 9(8)   BINARY.
       01  TOKEN                           PIC X(8).
      *
      *--- Tabla para el JCL
      *--- OJO: Se a¤ade USER y PASSWORD para evitar problemas
      *    de autorizaci¢n al ejecutar el JCL, ya que el usuario
      *    que le entra al Batch ya ser¡a START2
      *
       01  INIT-JCL.
           03  FILLER PIC X(80) VALUE
           "//RUNBHOLL JOB MCORNER,'RUN-BHOLL',USER=IBMUSER,         ".
           03  FILLER PIC X(80) VALUE
           "//       PASSWORD=SYS1,MSGCLASS=A,CLASS=A,MSGLEVEL=(1,1) ".
           03  FILLER PIC X(80) VALUE
           "//RUNPGM   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4096K    ".
           03  FILLER PIC X(80) VALUE
           "//STEPLIB  DD  DISP=SHR,DSN=DSN910.DB9G.SDSNEXIT         ".
           03  FILLER PIC X(80) VALUE
           "//         DD  DISP=SHR,DSN=DSN910.SDSNLOAD              ".
           03  FILLER PIC X(80) VALUE
           "//         DD  DISP=SHR,DSN=MCORNER.BATCH.LOAD           ".
           03  FILLER PIC X(80) VALUE
           "//         DD  DISP=SHR,DSN=MCORNER.CALL.LOAD            ".
           03  FILLER PIC X(80) VALUE
           "//LSTOUT   DD  SYSOUT=A                                  ".
           03  FILLER PIC X(80) VALUE
           "//SYSPRINT DD  SYSOUT=A                                  ".
           03  FILLER PIC X(80) VALUE
           "//SYSTSPRT DD  SYSOUT=A                                  ".
           03  FILLER PIC X(80) VALUE
           "//SYSOUT   DD  SYSOUT=A                                  ".
           03  FILLER PIC X(80) VALUE
           "//SYSTSIN  DD *                                          ".
           03  FILLER PIC X(80) VALUE
           "  DSN SYSTEM(DB9G)                                       ".
           03  FILLER PIC X(80) VALUE
           "      RUN PROGRAM (BHOLL)                   -            ".
           03  FILLER PIC X(80) VALUE
           "          PLAN(BTHPLAN)                     -            ".
           03  FILLER PIC X(80) VALUE
           "          LIBRARY('MCORNER.BATCH.LOAD')     -            ".
           03  FILLER PIC X(80) VALUE
           "          PARMS('DANN                                   ')".
           03  FILLER PIC X(80) VALUE
           "  END                                                    ".
           03  FILLER PIC X(80) VALUE
           "/*                                                       ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE
           "                                                         ".
           03  FILLER PIC X(80) VALUE LOW-VALUES.
      *
       01  WT-JCL-TB REDEFINES INIT-JCL.
           03  JCL-LINE    PIC X(80) OCCURS 40 INDEXED BY I.
      *--- TXMUL ->
       77 IND                             PIC 99 VALUE ZERO.
      *--- TXMUL <-
      *
      *--- Zona para CALLs --------------------------------------------
      *
           COPY LKCENTI.
      *
       01 FILLER                           PIC X(17)
           VALUE '***END-WORKING***'.
      *----------------------------------------------------------------
        77 SQL-TEMP      PIC X(128).
        77 DSN-TEMP      PIC S9(9)  COMP-4.
        77 DSN-TMP2      PIC S9(18) COMP-3.
        77 DSNNROWS      PIC S9(9)  COMP-4.
        77 DSNNTYPE      PIC S9(4)  COMP-4.
        77 DSNNLEN       PIC S9(4)  COMP-4.
        77 SQL-NULL      PIC S9(9) COMP-4 VALUE +0.
        77 SQL-INIT-FLAG PIC S9(4) COMP-4 VALUE +0.
           88 SQL-INIT-DONE VALUE +1.
        77 SQL-FILE-READ      PIC S9(9) COMP-4 VALUE +2.
        77 SQL-FILE-CREATE    PIC S9(9) COMP-4 VALUE +8.
        77 SQL-FILE-OVERWRITE PIC S9(9) COMP-4 VALUE +16.
        77 SQL-FILE-APPEND    PIC S9(9) COMP-4 VALUE +32.
        01 SQL-PLIST7.
           05 SQL-PLIST-CON   PIC S9(9) COMP-4 VALUE +4210688.
           05 SQL-CALLTYPE    PIC S9(4) COMP-4 VALUE +50.
           05 SQL-PROG-NAME   PIC X(8)  VALUE X'50484F4C55202020'.
           05 SQL-TIMESTAMP-1 PIC S9(9) COMP-4 VALUE +469383585.
           05 SQL-TIMESTAMP-2 PIC S9(9) COMP-4 VALUE +109286848.
           05 SQL-SECTION     PIC S9(4) COMP-4 VALUE +1.
           05 SQL-CODEPTR     PIC S9(9) COMP-4.
           05 SQL-VPARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 SQL-APARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 FILLER          PIC S9(4) COMP-4 VALUE +1208.
           05 SQL-STMT-TYPE   PIC S9(4) COMP-4 VALUE +3.
           05 SQL-STMT-NUM    PIC S9(9) COMP-4 VALUE +1198.
           05 SQL-PLIST-FLG   PIC S9(4) COMP-4 VALUE +0.
           05 FILLER          PIC X(18) VALUE
              X'000000000000000000000000000000000000'.
           05 SQL-PVAR-LIST7.
              10 PRE-SQLDAID  PIC X(8)  VALUE 'SQLDA  Ê'.
              10 PRE-SQLDABC  PIC S9(9) COMP-4 VALUE +60.
              10 PRE-SQLN     PIC S9(4) COMP-4 VALUE +1.
              10 PRE-SQLLD    PIC S9(4) COMP-4 VALUE +1.
              10 PRE-SQLVAR.
                12 SQLVAR-BASE1.
                  15 SQL-PVAR-TYPE1      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-PVAR-LEN1       PIC S9(4) COMP-4 VALUE +8.
                  15 SQL-PVAR-ADDRS1.
                     20 SQL-PVAR-ADDR1   PIC S9(9) COMP-4.
                     20 SQL-PVAR-IND1    PIC S9(9) COMP-4.
                  15 SQL-PVAR-NAME1.
                     20 SQL-PVAR-NAMEL1  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-PVAR-NAMEC1  PIC X(30) VALUE ' '.
        01 SQL-PLIST8.
           05 SQL-PLIST-CON   PIC S9(9) COMP-4 VALUE +4195328.
           05 SQL-CALLTYPE    PIC S9(4) COMP-4 VALUE +30.
           05 SQL-PROG-NAME   PIC X(8)  VALUE X'50484F4C55202020'.
           05 SQL-TIMESTAMP-1 PIC S9(9) COMP-4 VALUE +469383585.
           05 SQL-TIMESTAMP-2 PIC S9(9) COMP-4 VALUE +109286848.
           05 SQL-SECTION     PIC S9(4) COMP-4 VALUE +1.
           05 SQL-CODEPTR     PIC S9(9) COMP-4.
           05 SQL-VPARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 SQL-APARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 FILLER          PIC S9(4) COMP-4 VALUE +1208.
           05 SQL-STMT-TYPE   PIC S9(4) COMP-4 VALUE +4.
           05 SQL-STMT-NUM    PIC S9(9) COMP-4 VALUE +1208.
           05 SQL-PLIST-FLG   PIC S9(4) COMP-4 VALUE +0.
           05 FILLER          PIC X(18) VALUE
              X'000000000000000000000000000000000000'.
           05 SQL-AVAR-LIST8.
              10 PRE-SQLDAID  PIC X(8)  VALUE 'SQLDA  Ê'.
              10 PRE-SQLDABC  PIC S9(9) COMP-4 VALUE +148.
              10 PRE-SQLN     PIC S9(4) COMP-4 VALUE +3.
              10 PRE-SQLLD    PIC S9(4) COMP-4 VALUE +3.
              10 PRE-SQLVAR.
                12 SQLVAR-BASE1.
                  15 SQL-AVAR-TYPE1      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-AVAR-LEN1       PIC S9(4) COMP-4 VALUE +8.
                  15 SQL-AVAR-ADDRS1.
                     20 SQL-AVAR-ADDR1   PIC S9(9) COMP-4.
                     20 SQL-AVAR-IND1    PIC S9(9) COMP-4.
                  15 SQL-AVAR-NAME1.
                     20 SQL-AVAR-NAMEL1  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-AVAR-NAMEC1  PIC X(30) VALUE ' '.
                12 SQLVAR-BASE2.
                  15 SQL-AVAR-TYPE2      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-AVAR-LEN2       PIC S9(4) COMP-4 VALUE +8.
                  15 SQL-AVAR-ADDRS2.
                     20 SQL-AVAR-ADDR2   PIC S9(9) COMP-4.
                     20 SQL-AVAR-IND2    PIC S9(9) COMP-4.
                  15 SQL-AVAR-NAME2.
                     20 SQL-AVAR-NAMEL2  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-AVAR-NAMEC2  PIC X(30) VALUE ' '.
                12 SQLVAR-BASE3.
                  15 SQL-AVAR-TYPE3      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-AVAR-LEN3       PIC S9(4) COMP-4 VALUE +64.
                  15 SQL-AVAR-ADDRS3.
                     20 SQL-AVAR-ADDR3   PIC S9(9) COMP-4.
                     20 SQL-AVAR-IND3    PIC S9(9) COMP-4.
                  15 SQL-AVAR-NAME3.
                     20 SQL-AVAR-NAMEL3  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-AVAR-NAMEC3  PIC X(30) VALUE ' '.
        01 SQL-PLIST9.
           05 SQL-PLIST-CON   PIC S9(9) COMP-4 VALUE +4194304.
           05 SQL-CALLTYPE    PIC S9(4) COMP-4 VALUE +45.
           05 SQL-PROG-NAME   PIC X(8)  VALUE X'50484F4C55202020'.
           05 SQL-TIMESTAMP-1 PIC S9(9) COMP-4 VALUE +469383585.
           05 SQL-TIMESTAMP-2 PIC S9(9) COMP-4 VALUE +109286848.
           05 SQL-SECTION     PIC S9(4) COMP-4 VALUE +1.
           05 SQL-CODEPTR     PIC S9(9) COMP-4.
           05 SQL-VPARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 SQL-APARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 FILLER          PIC S9(4) COMP-4 VALUE +1208.
           05 SQL-STMT-TYPE   PIC S9(4) COMP-4 VALUE +5.
           05 SQL-STMT-NUM    PIC S9(9) COMP-4 VALUE +1219.
           05 SQL-PLIST-FLG   PIC S9(4) COMP-4 VALUE +0.
           05 FILLER          PIC X(18) VALUE
              X'000000000000000000000000000000000000'.

       LINKAGE SECTION.
      *
       01 DFHCOMMAREA                      PIC X(2048).
      *
      *================================================================
       PROCEDURE DIVISION.
      *----------------------------------------------------------------
      *--- Proceso principal                                        ---
      *----------------------------------------------------------------
       DSNSQL SECTION.
       SQL-SKIP.
           GO TO SQL-INIT-END.
       SQL-INITIAL.
           MOVE 1 TO SQL-INIT-FLAG.
           CALL 'DSNHADDR' USING SQL-VPARMPTR OF SQL-PLIST7 SQL-PVAR-LIS
      -    T7.
           CALL 'DSNHADD2' USING SQL-PVAR-ADDRS1 IN
           SQL-PVAR-LIST7 TB-CLAVE1 OF TB-TABLAS SQL-NULL
           CALL 'DSNHADDR' USING SQL-CODEPTR OF SQL-PLIST7 SQLCA.
           CALL 'DSNHADDR' USING SQL-APARMPTR OF SQL-PLIST8 SQL-AVAR-LIS
      -    T8.
           CALL 'DSNHADD2' USING SQL-AVAR-ADDRS1 IN
           SQL-AVAR-LIST8 TB-CLAVE2 OF TB-TABLAS SQL-NULL TB-CLAVE3 OF T
      -    B-TABLAS SQL-NULL TB-VALOR OF TB-TABLAS SQL-NULL.
           CALL 'DSNHADDR' USING SQL-CODEPTR OF SQL-PLIST8 SQLCA.
           CALL 'DSNHADDR' USING SQL-CODEPTR OF SQL-PLIST9 SQLCA.
       SQL-INIT-END.
           CONTINUE.

       0000-PROCESO-TAREA.
      *
      *****EXEC SQL
      *****     INCLUDE PDOPCIDB
      *****END-EXEC
      *----------------------------------------------------------------
      *--- CONTROL DE OPCIONES PARA PROGRAMAS CICS CON DB2          ---
      *--- VERSION 1.0
      *----------------------------------------------------------------
      *--- INCLUIR ESTE COPY CON INCLUDE DE SQL EN TODOS LOS        ---
      *--- PROGRAMAS COBOL CON DB2 DENTRO DE LA PROCEDURE DIVISION. ---
      *--- AL METERLO CON INCLUDE DE SQL, EL PRE-COMPILADOR SQL     ---
      *--- LO TRADUCE Y, POR LO TANTO, SE PUEDEN UTILIZAR COMANDOS  ---
      *--- CICS IGUALMENTE.                                         ---
      *----------------------------------------------------------------
      *
           EXEC CICS
                SET TERMINAL(EIBTRMID) NOUCTRAN
           END-EXEC
      *
           EXEC CICS
                IGNORE CONDITION MAPFAIL
           END-EXEC
      *
      *****EXEC SQL
      *****     WHENEVER  SQLERROR    GO TO  G999-ERROR-DB2
      *****END-EXEC
      *
      *****EXEC SQL
      *****     WHENEVER  SQLWARNING  GO TO  G999-ERROR-DB2
      *****END-EXEC
      *
      *****EXEC SQL
      *****     WHENEVER  NOT FOUND   CONTINUE
      *****END-EXEC
      *
           CONTINUE.
      *
      *
           MOVE WC-TRANSACCION              TO WA-TRANSACCION
           MOVE WC-CURPOS                   TO CH-CURPOS
      *
           IF EIBCALEN > 0
              MOVE DFHCOMMAREA              TO CH-COMMAREA-HOL
           END-IF
      *
      *--- Evaluacion de Commarea y Teclas para identificar
      *--- los procesos que deban de ejecutarse
      *
           EVALUATE TRUE
      *
      *--- No hay Commarea
      *--- Se inicializa la Commarea y se envia mapa limpio
      *
               WHEN EIBCALEN = ZERO
                    MOVE LOW-VALUE          TO HOLUMPO
                    SET ENVIO-ERASE         TO TRUE
                    MOVE 'X'                TO CH-X-ACCION
                    MOVE DFHRED             TO MSGC
      *--- TXMUL ->
                    MOVE 'HOLUARR'          TO CL-CLAVE1
                    PERFORM 20100-OBTENER-TEXTO
                    MOVE CL-VALOR           TO MSGO
      *             MOVE 'Para arrancar HOLU utiliza HOLM... pulsa F3'
      *               TO MSGO
      *--- TXMUL <-
                    PERFORM 8000-ENVIO-MAPA
      *
      *--- Hay Commarea
      *--- El programa ha podido ser arrancado por XCTL desde otro
      *--- programa. en este caso la transaccion actual ser  la del
      *--- programa que ha llamado a este jhasta que se haga un
      *--- RETURN TRANSID
      *
               WHEN EIBCALEN > ZERO AND EIBTRNID NOT = WC-TRANSACCION
                    MOVE LOW-VALUE          TO HOLUMPO
                    SET ENVIO-ERASE         TO TRUE
                    PERFORM 8000-ENVIO-MAPA
      *
      *--- Borrado de pantalla  - Mensaje y retorno a CICS
      *--- F3 tambien puede terminar esta transaccion
      *
               WHEN EIBAID = DFHCLEAR
                    MOVE LOW-VALUE          TO HOLUMPO
                    PERFORM 8100-ENVIA-MENSAJE
                    PERFORM 8900-RETORNO-CICS
      *
      *--- Teclas de Att no hacemos nada
      *
               WHEN EIBAID = DFHPA1 OR DFHPA2 OR DFHPA3
                    CONTINUE
      *
      *--- Teclas de funcion Legales
      *--- Teclas que requieren un procesado del mapa
      *
               WHEN EIBAID = DFHENTER
                 OR EIBAID = DFHPF1
                 OR EIBAID = DFHPF3
                    PERFORM 1000-PROCESO-MAPA
      *
      *--- Teclas ilegales
      *--- Teclas no programadas que se detectaran en proceso de mapa
      *
               WHEN OTHER
                    PERFORM 1000-PROCESO-MAPA
      *
           END-EVALUATE
      *
      *--- Terminamos el proceso con Return TransId
      *--- Volvemos a enganchar esta misma transaccion
      *
           PERFORM 8200-RETORNO-TRANS.
      *
       0000-PROCESO-TAREA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Procesa la pantalla segun opcion elegida en menu         ---
      *----------------------------------------------------------------
       1000-PROCESO-MAPA.
      *
      * Recuperamos el mapa desde el terminal
      *
           PERFORM 8400-RECIBE-MAPA
      *
           EVALUATE TRUE
      *
      *--- Enter: Si la accion de CA es 'X' volvemos al menu
      *
              WHEN EIBAID = DFHENTER AND CH-X-ACCION = 'X'
                  PERFORM 3000-PROCESO-VOLVER
      *
      *--- Enter: Validamos el mapa y si es correcto proceso Enter
      *
              WHEN EIBAID = DFHENTER
                  PERFORM 2000-ACCION-MAPA
      *
      *--- F3: Se llama al programa de MENU (Volver)
      *
              WHEN EIBAID = DFHPF3
                   PERFORM 3000-PROCESO-VOLVER
      *
      *--- F1: Se llama al programa de ayuda online
      *
              WHEN EIBAID = DFHPF1
                   PERFORM 5000-PROCESO-AYUDA
      *
      *-- Otras teclas: Se avisa con mensaje en pantalla y mapa limpio
      *
              WHEN OTHER
      *--- TXMUL ->
                   MOVE 'KEYERR'           TO CL-CLAVE1
                   PERFORM 20100-OBTENER-TEXTO
                   MOVE CL-VALOR           TO MSGO
      *            MOVE 'Tecla erronea...' TO MSGO
      *--- TXMUL <-
      *
           END-EVALUATE.
      *
           SET ENVIO-DATAONLY              TO TRUE
           PERFORM 8000-ENVIO-MAPA.
      *
       1000-PROCESO-MAPA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Validamos y procesamos el mapa segun la accion de CA     ---
      *----------------------------------------------------------------
       2000-ACCION-MAPA.
      *
           PERFORM 2100-VALIDA-CAMPOS
      *
           IF NOT ERROR-VALIDACION
              PERFORM 2500-EJECUTA-ACCION
           END-IF.
      *
       2000-ACCION-MAPA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Validamos campos obligatorios segun accion               ---
      *----------------------------------------------------------------
       2100-VALIDA-CAMPOS.
      *
           MOVE 0                          TO SW-ERROR-VALIDACION
           MOVE 0                          TO SW-ERROR-CRITERIOS
           MOVE 0                          TO SW-ERROR-TIPOS
           MOVE 0                          TO SW-ERROR-FILTROS
           MOVE 0                          TO COUNT-ORD
           MOVE 0                          TO COUNT-ASC
           MOVE 0                          TO COUNT-COM
      *
           IF ODNII NOT = 'S'          AND
              ODNII NOT = SPACES       AND
              ODNII NOT = HIGH-VALUES  AND
              ODNII NOT = LOW-VALUES
              MOVE LOW-VALUES              TO ODNIO
           END-IF
      *
           IF ONOMI NOT = 'S'          AND
              ONOMI NOT = SPACES       AND
              ONOMI NOT = HIGH-VALUES  AND
              ONOMI NOT = LOW-VALUES
              MOVE LOW-VALUES              TO ONOMO
           END-IF
      *
           IF OAPEI NOT = 'S'          AND
              OAPEI NOT = SPACES       AND
              OAPEI NOT = HIGH-VALUES  AND
              OAPEI NOT = LOW-VALUES
              MOVE LOW-VALUES              TO OAPEO
           END-IF
      *
           IF OASCI NOT = 'S'          AND
              OASCI NOT = SPACES       AND
              OASCI NOT = HIGH-VALUES  AND
              OASCI NOT = LOW-VALUES
              MOVE LOW-VALUES              TO OASCO
           END-IF
      *
           IF ODESI NOT = 'S'          AND
              ODESI NOT = SPACES       AND
              ODESI NOT = HIGH-VALUES  AND
              ODESI NOT = LOW-VALUES
              MOVE LOW-VALUES              TO ODESO
           END-IF
      *
           IF FCOMI NOT = 'S'          AND
              FCOMI NOT = SPACES       AND
              FCOMI NOT = HIGH-VALUES  AND
              FCOMI NOT = LOW-VALUES
              MOVE LOW-VALUES              TO FCOMO
           END-IF
      *
           IF FCONI NOT = 'S'          AND
              FCONI NOT = SPACES       AND
              FCONI NOT = HIGH-VALUES  AND
              FCONI NOT = LOW-VALUES
              MOVE LOW-VALUES              TO FCONO
           END-IF
      *
           PERFORM 2110-VALIDA-CRITERIOS
           IF NOT ERROR-CRITERIOS
              PERFORM 2120-VALIDA-TIPOS
              IF NOT ERROR-TIPOS
                 PERFORM 2130-VALIDA-FILTROS
              END-IF
           END-IF
      *
           IF ERROR-CRITERIOS   OR
              ERROR-TIPOS       OR
              ERROR-FILTROS
              SET ERROR-VALIDACION         TO TRUE
           END-IF.
      *
       2100-VALIDA-CAMPOS-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Validar criterios de ordenaci¢n                          ---
      *----------------------------------------------------------------
       2110-VALIDA-CRITERIOS.
      *
           IF ODNII = 'S'
              ADD 1                        TO COUNT-ORD
           END-IF
           IF ONOMI = 'S'
              ADD 1                        TO COUNT-ORD
           END-IF
           IF OAPEI = 'S'
              ADD 1                        TO COUNT-ORD
           END-IF
      *
           IF COUNT-ORD NOT = 1
              MOVE DFHRED                  TO MSGC
      *--- TXMUL ->
              MOVE 'SELCRIS'               TO CL-CLAVE1
              PERFORM 20100-OBTENER-TEXTO
              MOVE CL-VALOR                TO MSGO
      *       MOVE 'Seleccionar un criterio y uno solo, con "S"'
      *         TO MSGO
      *--- TXMUL <-
              move count-ord to msgo(78:1)
              SET ERROR-CRITERIOS          TO TRUE
           END-IF.
      *
       2110-VALIDA-CRITERIOS-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Validar tipos de ordenaci¢n                              ---
      *----------------------------------------------------------------
       2120-VALIDA-TIPOS.
      *
           IF OASCI = 'S'
              ADD 1                        TO COUNT-ASC
           END-IF
           IF ODESI = 'S'
              ADD 1                        TO COUNT-ASC
           END-IF
      *
           IF COUNT-ASC NOT = 1
              MOVE DFHRED                  TO MSGC
      *--- TXMUL ->
              MOVE 'SELORDS'               TO CL-CLAVE1
              PERFORM 20100-OBTENER-TEXTO
              MOVE CL-VALOR                TO MSGO
      *       MOVE 'Seleccionar solo un tipo de ¢rden con "S"'
      *         TO MSGO
      *--- TXMUL <-
              SET ERROR-TIPOS              TO TRUE
           END-IF.
      *
       2120-VALIDA-TIPOS-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Validar filtros de ordenaci¢n                            ---
      *----------------------------------------------------------------
       2130-VALIDA-FILTROS.
      *
           IF FCOMI = 'S'
              ADD 1                        TO COUNT-COM
           END-IF
           IF FCONI = 'S'
              ADD 1                        TO COUNT-COM
           END-IF
           IF COUNT-COM NOT = 1 AND COUNT-COM NOT = 0
              MOVE DFHRED                  TO MSGC
      *--- TXMUL ->
              MOVE 'FILERRS'               TO CL-CLAVE1
              PERFORM 20100-OBTENER-TEXTO
              MOVE CL-VALOR                TO MSGO
      *       MOVE 'Filtros incoherentes. Solo uno con "S" o ninguno'   "'
      *         TO MSGO
      *--- TXMUL <-
              SET ERROR-FILTROS            TO TRUE
           END-IF
           IF NOT ERROR-FILTROS AND
              (FCOMI = 'S' OR FCONI = 'S') AND
              (TEXTI = SPACES OR
               TEXTI = LOW-VALUES OR
               TEXTI = HIGH-VALUES)
               SET ERROR-FILTROS           TO TRUE
               MOVE DFHRED                 TO MSGC
      *--- TXMUL ->
               MOVE 'FILTXTB'              TO CL-CLAVE1
               PERFORM 20100-OBTENER-TEXTO
               MOVE CL-VALOR               TO MSGO
      *        MOVE 'Filtrar implica un texto a buscar'
      *          TO MSGO
      *--- TXMUL <-
           END-IF.
      *
       2130-VALIDA-FILTROS-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Ejecutamos la accion segun opcion de CA                  ---
      *----------------------------------------------------------------
       2500-EJECUTA-ACCION.
      *
           EVALUATE TRUE
              WHEN ODNII = 'S'
                   MOVE 'D'                TO PARM-CUR1
              WHEN ONOMI = 'S'
                   MOVE 'N'                TO PARM-CUR1
              WHEN OAPEI = 'S'
                   MOVE 'A'                TO PARM-CUR1
           END-EVALUATE
      *
           EVALUATE TRUE
              WHEN OASCI = 'S'
                   MOVE 'A'                TO PARM-CUR2
              WHEN ODESI = 'S'
                   MOVE 'D'                TO PARM-CUR2
           END-EVALUATE
      *
           IF FCOMI = 'S'
              MOVE 'S'                     TO PARM-COMI
           ELSE
              MOVE 'N'                     TO PARM-COMI
           END-IF
           IF FCONI = 'S'
              MOVE 'S'                     TO PARM-CONT
           ELSE
              MOVE 'N'                     TO PARM-CONT
           END-IF
           IF (TEXTI NOT = SPACES      AND
               TEXTI NOT = LOW-VALUES  AND
               TEXTI NOT = HIGH-VALUES)  AND
               (FCOMI = 'S' OR FCONI = 'S')
              MOVE TEXTI                   TO PARM-TXTO
           ELSE
              MOVE SPACES                  TO PARM-TXTO
              MOVE SPACES                  TO TEXTO
           END-IF.
      *
      *--- Modificamos los PARMS del JCL y lo lanzamos
      *
           MOVE JCL-LINE(17)               TO JCL-STATEMENT
           MOVE WX-PARMS                   TO JCL-STATEMENT(18:39)
           MOVE JCL-STATEMENT              TO JCL-LINE(17)
      *
           PERFORM 6100-ABRE-SPOOL
           SET I                           TO 1
           PERFORM 6200-ESCRIBE-SPOOL
              UNTIL I > 40                    OR
                    JCL-LINE(I) = LOW-VALUES  OR
                    JCL-LINE(I) = SPACES
           PERFORM 6300-CIERRA-SPOOL
           MOVE DFHYELLO                   TO MSGC
      *--- TXMUL ->
           MOVE 'LISSPOO'                  TO CL-CLAVE1.
           PERFORM 20100-OBTENER-TEXTO.
           MOVE CL-VALOR                   TO MSGO.
      *    MOVE 'Listado lanzado al Spool' TO MSGO.
      *--- TXMUL <-
      *
       2500-EJECUTA-ACCION-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Llamamos al programa de MENU (Volver)                    ---
      *----------------------------------------------------------------
       3000-PROCESO-VOLVER.
      *
           MOVE CS-PGM-CLIENTES            TO CH-XCTL
           MOVE WC-TRANSACCION             TO CH-TRANSACCION
           MOVE WC-TRANSACCION             TO CH-TRANS-RETORNO
           MOVE WC-PROGRAMA                TO CH-PROGRAMA-RETORNO
           PERFORM 8700-XCTL-PROGRAMA.
      *
       3000-PROCESO-VOLVER-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Procesa la tecla F1                                      ---
      *---    Llamamos al programa de visualizacion de ayuda        ---
      *----------------------------------------------------------------
       5000-PROCESO-AYUDA.
      *
           MOVE CS-PGM-AYUDAOL             TO CH-XCTL
           MOVE WC-TRANSACCION             TO CH-TRANSACCION
           MOVE WC-TRANSACCION             TO CH-TRANS-RETORNO
           MOVE WC-PROGRAMA                TO CH-PROGRAMA-RETORNO
           PERFORM 8700-XCTL-PROGRAMA.
      *
       5000-PROCESO-AYUDA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Abre el archivo de escritura en el Spool                 ---
      *----------------------------------------------------------------
       6100-ABRE-SPOOL.
      *
           EXEC CICS SPOOLOPEN OUTPUT
                TOKEN(TOKEN)
                USERID('INTRDR')
                NODE('N1')
                CLASS('A')
                NOHANDLE
                RESP(RESP)
                RESP2(RESP2)
           END-EXEC
      *
           IF EIBRESP NOT = 0
              MOVE WC-SPOOL-OPEN           TO WX-ABEND
              PERFORM 8600-CICS-ABEND
           END-IF.
      *
       6100-ABRE-SPOOL-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Escribe una l¡nea en el Spool                            ---
      *----------------------------------------------------------------
       6200-ESCRIBE-SPOOL.
      *
           MOVE JCL-LINE(I)                TO JCL-STATEMENT
      *
           EXEC CICS SPOOLWRITE
                FROM(JCL-STATEMENT)
                NOHANDLE
                FLENGTH(WC-JCL-LENGTH)
                TOKEN(TOKEN)
           END-EXEC
      *
           IF EIBRESP NOT = 0
              MOVE WC-SPOOL-WRITE          TO WX-ABEND
              PERFORM 8600-CICS-ABEND
           END-IF
      *
           SET I                           UP BY 1.
      *
       6200-ESCRIBE-SPOOL-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Cierra el archivo de Spool                               ---
      *----------------------------------------------------------------
       6300-CIERRA-SPOOL.
      *
           EXEC CICS SPOOLCLOSE
                TOKEN(TOKEN)
                NOHANDLE
           END-EXEC
      *
           IF EIBRESP NOT = 0
              MOVE WC-SPOOL-CLOSE          TO WX-ABEND
              PERFORM 8600-CICS-ABEND
           END-IF.
      *
       6300-CIERRA-SPOOL-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Envia el mapa al terminal sergun modo del switch         ---
      *----------------------------------------------------------------
       8000-ENVIO-MAPA.
      *
           EVALUATE TRUE
      *
      *--- Envio de mapa limpio
      *
               WHEN ENVIO-ERASE
      *
      *--- TXMUL ->
                   MOVE 50 TO RTC-CENTER-AREA
                   PERFORM 20000-TITULO-MAPA
      * Carga de los textos fijos del mapa
                   MOVE WC-TRANSACCION TO TB-CLAVE1
                   PERFORM 20200-OPEN-CURSOR-MAPS
                   PERFORM WITH TEST AFTER UNTIL SQLCODE = 100
                       PERFORM 20200-FETCH-CURSOR-MAPS
                       IF SQLCODE NOT = 100 AND
                          TB-CLAVE3 = CL-IDIOMA THEN
                          ADD 1 TO IND
                          EVALUATE IND
                             WHEN 1
                                MOVE TB-VALOR TO TX10O
                             WHEN 2
                                MOVE TB-VALOR TO TX20O
                             WHEN 3
                                MOVE TB-VALOR TO TX30O
                             WHEN 4
                                MOVE TB-VALOR TO TX40O
                             WHEN 5
                                MOVE TB-VALOR TO TX50O
                             WHEN 6
                                MOVE TB-VALOR TO TX60O
                             WHEN 7
                                MOVE TB-VALOR TO TX70O
                             WHEN 8
                                MOVE TB-VALOR TO TX80O
                             WHEN 9
                                MOVE TB-VALOR TO TX90O
                             WHEN 10
                                MOVE TB-VALOR TO TX100O
                             WHEN 11
                                MOVE TB-VALOR TO TX110O
                             WHEN 12
                                MOVE TB-VALOR TO TX120O
                             WHEN 13
                                MOVE TB-VALOR TO TX130O
                          END-EVALUATE
                       END-IF
                   END-PERFORM
                   PERFORM 20200-CLOSE-CURSOR-MAPS
      *--- TXMUL <-
      *
                   EXEC CICS
                       SEND MAP    ('HOLUMP')
                            MAPSET ('HOLUMP')
                            FROM   (HOLUMPO)
                            CURSOR (CH-CURPOS)
                            ERASE
                   END-EXEC
      *
      *--- Envio del mapa Solo datos
      *
               WHEN ENVIO-DATAONLY
      *
                   EXEC CICS
                       SEND MAP     ('HOLUMP')
                            MAPSET  ('HOLUMP')
                            FROM    (HOLUMPO)
                            CURSOR  (CH-CURPOS)
                            DATAONLY
                   END-EXEC
      *
           END-EVALUATE.
      *
       8000-ENVIO-MAPA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Envia un mensaje al terminal del usuario (fin sesion)    ---
      *----------------------------------------------------------------
       8100-ENVIA-MENSAJE.
      *
      *--- TXMUL ->
           MOVE 'HOLUEND'                  TO CL-CLAVE1.
           PERFORM 20100-OBTENER-TEXTO.
           MOVE CL-VALOR                   TO WL-FIN-SESION.
      * 'La transaccion HOLU ha finalizado...'
      *--- TXMUL <-
           EXEC CICS
               SEND TEXT FROM(WL-FIN-SESION)
                         ERASE
                         FREEKB
           END-EXEC.
      *
       8100-ENVIA-MENSAJE-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Devuelve el control a una transaccion                    ---
      *----------------------------------------------------------------
       8200-RETORNO-TRANS.
      *
           EXEC CICS
               RETURN
               TRANSID      (WA-TRANSACCION)
               COMMAREA     (CH-COMMAREA-HOL)
           END-EXEC.
      *
       8200-RETORNO-TRANS-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Recibe el mapa de la tarea                               ---
      *----------------------------------------------------------------
       8400-RECIBE-MAPA.
      *
           EXEC CICS
                RECEIVE
                MAP     ('HOLUMP')
                MAPSET  ('HOLUMP')
                INTO    (HOLUMPI)
           END-EXEC
      *
           PERFORM 8410-MAYUSCULAS.
      *
       8400-RECIBE-MAPA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Pasa datos sensibles a mayusculas                        ---
      *----------------------------------------------------------------
       8410-MAYUSCULAS.
      *
           MOVE FUNCTION UPPER-CASE(ODNII)   TO ODNIO.
           MOVE FUNCTION UPPER-CASE(ONOMI)   TO ONOMO.
           MOVE FUNCTION UPPER-CASE(OAPEI)   TO OAPEO.
           MOVE FUNCTION UPPER-CASE(OASCI)   TO OASCO.
           MOVE FUNCTION UPPER-CASE(ODESI)   TO ODESO.
           MOVE FUNCTION UPPER-CASE(FCOMI)   TO FCOMO
           MOVE FUNCTION UPPER-CASE(FCONI)   TO FCONO.
      *
       8410-MAYUSCULAS-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Llama a otro programa CICS por LINK con Commarea          ---
      *----------------------------------------------------------------
       8500-LINK-PROGRAMA.
      *
           EXEC CICS
                LINK
                PROGRAM (CH-LINK)
                COMMAREA(CH-COMMAREA-HOL)
                LENGTH   (LENGTH OF CH-COMMAREA-HOL)
           END-EXEC.
      *
       8500-LINK-PROGRAMA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Terminaci¢n an¢mala de la tarea                          ---
      *----------------------------------------------------------------
       8600-CICS-ABEND.
      *
           EXEC CICS
                ABEND
                ABCODE(WX-ABEND)
                NODUMP
           END-EXEC.
      *
       8600-CICS-ABEND-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Cede el control a otro programa CICS                     ---
      *----------------------------------------------------------------
       8700-XCTL-PROGRAMA.
      *
           EXEC CICS
                SET TERMINAL(EIBTRMID) UCTRAN
           END-EXEC
      *
           EXEC CICS
               XCTL PROGRAM  (CH-XCTL)
                    COMMAREA (CH-COMMAREA-HOL)
                    RESP     (WA-RESPUESTA-CICS)
           END-EXEC.
      *
       8700-XCTL-PROGRAMA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- CEDF visualiza una traza - Quitar para produccion        ---
      *----------------------------------------------------------------
       8800-TRAZA.
      *
           EXEC CICS
               ENTER       TRACEID(0)
               FROM        (WA-TRAZA)
           END-EXEC.
      *
       8800-TRAZA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Devuelve el control a CICS - Salida total                ---
      *----------------------------------------------------------------
       8900-RETORNO-CICS.
      *
           EXEC CICS
                SET TERMINAL(EIBTRMID) UCTRAN
           END-EXEC
      *
           EXEC CICS
                RETURN
           END-EXEC.
      *
       8900-RETORNO-CICS-EXIT.
           EXIT.
      *--- TXMUL ->
      *
      * Rutinas multiidioma
      *
      *****EXEC SQL
      *****     INCLUDE PTXMUL
      *****END-EXEC.
      *****************************************************************
      **  PROYECTO .........: HOL                                    **
      **  PROGRAMA .........: FPROC1                                 **
      **  VERSION ..........: 1.0                                    **
      **  TITULO ...........: PROCEDIMIENTOS COMPARTIDOS             **
      **                                                             **
      **  TIPO .............:                                        **
      **     - LENGUAJE ...............: COBOL II                    **
      **     - ENTORNO ................: CICS                        **
      **     - BASE DE DATOS ..........: DB2                         **
      **                                                             **
      **  DESCRIPCION ......:                                        **
      **                                                             **
      **    - Procedimientos de uso general en programas.            **
      **                                                             **
      **  LOG DE MODIFICACIONES:                                     **
      **  FECHA----- DESCRIPCION------------------------------ BUSCA **
      **  2024-08-19 Adaptaci¢n multiidioma (MOSSA)            TXMUL **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      *****************************************************************
      *--- TXMUL ->
      *----------------------------------------------------------------
      *--- Recuperar el titulo del mapa LNKTL    de tabla: TABLAS   ---
      *----------------------------------------------------------------
       20000-TITULO-MAPA.
      *==================
           PERFORM 20000-TITULO-MAPA-INI.
           PERFORM 20000-TITULO-MAPA-FIN.
       20000-TITULO-MAPA-EXIT.
           EXIT.
      *
       20000-TITULO-MAPA-INI.
      *======================
      *
           MOVE '100000-TITULO-MAPA'         TO WA-PARRAFO.
           MOVE DB2-TABLA-TITULOS            TO CL-TABLA.
           MOVE WC-TRANSACCION               TO CL-CLAVE1.
           MOVE LOW-VALUES                   TO CL-CLAVE2.
           MOVE CL-IDIOMA                    TO CL-CLAVE3.
           MOVE CS-PGM-TABLA-TITULO          TO CH-LINK.
      *
       20000-TITULO-MAPA-INI-EXIT.
           EXIT.
      *
       20000-TITULO-MAPA-FIN.
      *=======================
      *
           PERFORM 8500-LINK-PROGRAMA.
      *
           EVALUATE TRUE
              WHEN CL-RESULTADO = '00' OR CL-RESULTADO = '01'
      *--- USER ->
      *            MOVE WC-LONGITUD-TITULO
      *              TO LKC-LONGITUD-RESULTADO
      *--- USER <-
      *
      *--- Centrado del titulo del mapa CALL
                   MOVE CL-VALOR           TO RTC-INPUT-STRING
                   CALL CS-PGM-CALL-RTCENTI USING RTC-CENTI
                   IF RTC-RESULT = ZERO THEN
                      MOVE RTC-OUTPUT-STRING TO TITLEO
                   ELSE
                      MOVE RTC-INPUT-STRING  TO TITLEO
                   END-IF
      *
              WHEN CL-RESULTADO = '99'
                   MOVE '20000-TITULO-MAPA'         TO WA-PARRAFO
                   MOVE 'LNKTITLE KO'               TO CH-E-ACCION,
      *--- TXMUL ->
                                                       CL-VALOR
      *--- TXMUL <-
                   MOVE -999999999                  TO SQLCODE
                   MOVE 'SQLMSG?'                   TO SQLERRMC
                   PERFORM G999-ERROR-DB2
           END-EVALUATE.
      *--- Mostrar el usuario en la esquina superior izquierda
           MOVE SPACES TO USERO.
           STRING "(" US-USER ")"
                  DELIMITED BY SPACES
                INTO USERO
           END-STRING.
      *
       20000-TITULO-MAPA-FIN-EXIT.
           EXIT.
      *
      *----------------------------------------------------------------
      *--- Obtener texto fijo con prog LNKTL     de tabla: TABLAS   ---
      *----------------------------------------------------------------
       20100-OBTENER-TEXTO.
      *
           MOVE '20100-OBTENER-TEXTO'        TO WA-PARRAFO.
           MOVE DB2-TABLA-PROGRMSG           TO CL-TABLA.
           MOVE LOW-VALUES                   TO CL-CLAVE2.
           MOVE CL-IDIOMA                    TO CL-CLAVE3.
           MOVE CS-PGM-TABLA-TITULO          TO CH-LINK.
           PERFORM 8500-LINK-PROGRAMA.
           IF CL-RESULTADO = '99' THEN
              IF CS-PGM-TABLA-TITULO NOT = CS-PGM-ERROR THEN
                 MOVE '20100-OBTENER-TEXTO'       TO WA-PARRAFO
                 MOVE 'LNKTEXTO KO'               TO CH-E-ACCION,
                                                     CL-VALOR
                 MOVE -999999999                  TO SQLCODE
                 MOVE 'SQLMSG?'                   TO SQLERRMC
                 PERFORM G999-ERROR-DB2
              ELSE
                 MOVE 'FATAL ERROR' TO MSGO
                 SET ENVIO-DATAONLY TO TRUE
                 PERFORM 8000-ENVIO-MAPA
              END-IF
           END-IF.
      *
       20100-OBTENER-TEXTO-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Declaraci¢n y apertura del cursor de textos para mapas   ---
      *----------------------------------------------------------------
       20200-OPEN-CURSOR-MAPS.
      *****EXEC SQL
      *****   DECLARE TXT-CUR CURSOR FOR
      *****      SELECT CLAVE2, CLAVE3, VALOR
      *****        FROM TABLAS
      *****        WHERE TABLA = 'TEXTOMAP'
      *****          AND CLAVE1 = :TB-CLAVE1
      *****END-EXEC.
      *
      *****EXEC SQL
      *****   OPEN TXT-CUR
      *****END-EXEC.
           PERFORM SQL-INITIAL UNTIL SQL-INIT-DONE
           CALL 'DSNHLI' USING SQL-PLIST7
           IF SQLCODE < 0 GO TO G999-ERROR-DB2 ELSE
           IF SQLCODE > 0 AND SQLCODE NOT = 100
           OR SQLWARN0 = 'W' GO TO G999-ERROR-DB2 ELSE
           MOVE 1 TO SQL-INIT-FLAG
           END-IF
           END-IF.
       20200-OPEN-CURSOR-MAPS-FIN.
           EXIT.
      *----------------------------------------------------------------
      *--- Fetch del cursor para obtener textos para mapas          ---
      *----------------------------------------------------------------
       20200-FETCH-CURSOR-MAPS.
      *
      *****EXEC SQL
      *****   FETCH TXT-CUR
      *****      INTO :TB-CLAVE2, :TB-CLAVE3, :TB-VALOR
      *****END-EXEC.
           PERFORM SQL-INITIAL UNTIL SQL-INIT-DONE
           CALL 'DSNHLI' USING SQL-PLIST8
           IF SQLCODE < 0 GO TO G999-ERROR-DB2 ELSE
           IF SQLCODE > 0 AND SQLCODE NOT = 100
           OR SQLWARN0 = 'W' GO TO G999-ERROR-DB2 ELSE
           MOVE 1 TO SQL-INIT-FLAG
           END-IF
           END-IF.
       20200-FETCH-CURSOR-MAPS-FIN.
           EXIT.
      *----------------------------------------------------------------
      *--- Cierre del cursor para obtener textos para mapas         ---
      *----------------------------------------------------------------
       20200-CLOSE-CURSOR-MAPS.
      *
      *****EXEC SQL
      *****   CLOSE TXT-CUR
      *****END-EXEC.
           PERFORM SQL-INITIAL UNTIL SQL-INIT-DONE
           CALL 'DSNHLI' USING SQL-PLIST9
           IF SQLCODE < 0 GO TO G999-ERROR-DB2 ELSE
           IF SQLCODE > 0 AND SQLCODE NOT = 100
           OR SQLWARN0 = 'W' GO TO G999-ERROR-DB2 ELSE
           MOVE 1 TO SQL-INIT-FLAG
           END-IF
           END-IF.
       20200-CLOSE-CURSOR-MAPS-FIN.
           EXIT.
      *--- TXMUL <-
      *
       999999-DB2-ERRORES SECTION.
      *--- TXMUL <-
      *----------------------------------------------------------------
      *--- DB2 Errores y otros                                      ---
      *----------------------------------------------------------------
      *****EXEC SQL
      *****     INCLUDE PDDB2
      *****END-EXEC.
      *----------------------------------------------------------------
      *--- ERROR DE DB2 EN ALGUNA PARTE DEL CODIGO COBOL
      *--- VERSION 1.0
      *----------------------------------------------------------------
       G999-ERROR-DB2.
      *
           MOVE WA-PARRAFO              TO CH-E-PARRAFO
           MOVE SQLCODE                 TO DB2-CODE
           MOVE DB2-CODE                TO DB2-CODE-EDIT
           MOVE DB2-CODE-EDIT           TO CH-E-CODIGO
           MOVE SQLERRMC                TO CH-E-MENSAJE
           MOVE WC-PROGRAMA             TO CH-E-PROGRAMA
           MOVE WC-TRANSACCION          TO CH-E-TRANSACCION
           MOVE CS-PGM-ERROR            TO CH-XCTL
           MOVE WC-TRANSACCION          TO CH-TRANS-RETORNO
           MOVE WC-PROGRAMA             TO CH-PROGRAMA-RETORNO
           PERFORM 8700-XCTL-PROGRAMA.
      *----------------------------------------------------------------
       G999-ERROR-DB2-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- ERROR DE CICS EN ALGUNA PARTE DEL CODIGO COBOL
      *----------------------------------------------------------------
       G888-ERROR-CICS.
      *
           MOVE WA-PARRAFO              TO CH-E-PARRAFO
           MOVE EIBRESP                 TO DB2-CODE
           MOVE DB2-CODE                TO DB2-CODE-EDIT
           MOVE DB2-CODE-EDIT           TO CH-E-CODIGO
      *->  MOVE SQLERRMC                TO CH-E-MENSAJE
           MOVE WC-PROGRAMA             TO CH-E-PROGRAMA
           MOVE WC-TRANSACCION          TO CH-E-TRANSACCION
           MOVE CS-PGM-ERROR            TO CH-XCTL
           MOVE WC-TRANSACCION          TO CH-TRANS-RETORNO
           MOVE WC-PROGRAMA             TO CH-PROGRAMA-RETORNO
           PERFORM 8700-XCTL-PROGRAMA.
      *
       G888-ERROR-CCIS-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *----------------------------------------------------------------
      *-------------------- FIN DE PROGRAMA  --------------------------
      *----------------------------------------------------------------
