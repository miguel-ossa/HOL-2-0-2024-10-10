      *****************************************************************
      *                 IDENTIFICATION     DIVISION                   *
      *****************************************************************
       IDENTIFICATION DIVISION.
      *
       PROGRAM-ID.      PHOLY.
       AUTHOR.          LUIS MARTINEZ.
      *
      *****************************************************************
      **  PROYECTO .........: HOL                                    **
      **  PROGRAMA .........: PHOLY                                  **
      **  VERSION ..........: 1.0                                    **
      **  TITULO ...........: ENVIO LISTADO DE HOLS A SPOOL          **
      **                                                             **
      **  TIPO .............:                                        **
      **     - LENGUAJE ...............: COBOL II                    **
      **     - ENTORNO ................: CICS                        **
      **     - BASE DE DATOS ..........: DB2                         **
      **                                                             **
      **  DESCRIPCION ......:                                        **
      **                                                             **
      **    - HOLY lee las colas creadas por la transaccion HOLL     **
      **      que a su vez es arrancada desde HOLS. La cola se crea  **
      **      a modo delistado de todos los registros quecumplen los **
      **      filtros y ordenacion de HOLS. La cola se llama         **
      **      HOLLxxxx donde xxxx es el c¢digo de terminal que ha    **
      **      lanzado la transaccion HOLL.                           **
      **                                                             **
      **    - HOLY lee la cola TS generada en HOLS y env¡a los       **
      **      registros a un rchivo de Spool al JES2.                **
      **      El archivo se genera en la clase de salida A.          **
      **      Si tienes una impresora definida en clase A, el listado**
      **      va directo a la impresora y si no, se queda en Spool   **
      **                                                             **
      **  LOG DE MODIFICACIONES:                                     **
      **  FECHA----- DESCRIPCION------------------------------ BUSCA **
      **  2024-08-18 Adaptaci¢n multiidioma (MOSSA)            TXMUL **
      **  2024-09-24 Multiusuario (MOSSA)                      USER  **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      *****************************************************************
       ENVIRONMENT DIVISION.
      *
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.
      *
       DATA DIVISION.
      *----------------------------------------------------------------
       WORKING-STORAGE SECTION.
      *
      *--- Zona CICS --------------------------------------------------
      *
           COPY DFHAID.
           COPY DFHBMSCA.
           COPY CICSATTR.
           COPY DDCICS.
           COPY RESPCICS.
           COPY HOLYMP.
      *
      *--- Zona CICS fin ----------------------------------------------
      *
      *
      *--- Zona DB2 ---------------------------------------------------
      *
      *****EXEC SQL
      *****     INCLUDE SQLCA
      *****END-EXEC
        01 SQLCA.
           05 SQLCAID     PIC X(8).
           05 SQLCABC     PIC S9(9) COMP-4.
           05 SQLCODE     PIC S9(9) COMP-4.
           05 SQLERRM.
              49 SQLERRML PIC S9(4) COMP-4.
              49 SQLERRMC PIC X(70).
           05 SQLERRP     PIC X(8).
           05 SQLERRD     OCCURS 6 TIMES
                          PIC S9(9) COMP-4.
           05 SQLWARN.
              10 SQLWARN0 PIC X.
              10 SQLWARN1 PIC X.
              10 SQLWARN2 PIC X.
              10 SQLWARN3 PIC X.
              10 SQLWARN4 PIC X.
              10 SQLWARN5 PIC X.
              10 SQLWARN6 PIC X.
              10 SQLWARN7 PIC X.
           05 SQLEXT.
              10 SQLWARN8 PIC X.
              10 SQLWARN9 PIC X.
              10 SQLWARNA PIC X.
              10 SQLSTATE PIC X(5).
      *
      *****EXEC SQL
      *****     INCLUDE DDDB2
      *****END-EXEC
      * --- AREA DE DB2 PARA TRATAMIENTO DE ERRORES (VARIABLES HOST) -
      * --- VERSION 1.1
       01  DB2-AREA.
           03  DB2-CODE                     PIC S9(9).
           03  DB2-CODE-EDIT                PIC --------9.
           03  DB2-CODE-X                   PIC X(10).
           03  DB2-ERROR-MSG                PIC X(50).
      *
           03  DB2-IDIOMA                   PIC XX   VALUE 'ES'.
      *
      *--- TXMUL ->
      *    03  DB2-TABLA                    PIC X(8).
      *    03  DB2-CLAVE1                   PIC X(8).
      *    03  DB2-CLAVE2                   PIC X(8).
      *    03  DB2-CLAVE3                   PIC X(8).
      *    03  DB2-VALOR                    PIC X(80).
      *--- TXMUL <-
      *
           03  DB2-TABLA-TITULOS            PIC X(8) VALUE 'TITULMAP'.
           03  DB2-TABLA-TEXTOMAP           PIC X(8) VALUE 'TEXTOMAP'.
           03  DB2-TABLA-PROGRMSG           PIC X(8) VALUE 'PROGRMSG'.
      *
           03  DB2-COUNT1                   PIC S9(9) COMP-3.
           03  DB2-COUNT2                   PIC S9(9) COMP-3.
      *---------------------------------------------------------------
      *--- TXMUL ->
      *****EXEC SQL
      *****     INCLUDE TABLAS
      *****END-EXEC
      ******************************************************************
      * DCLGEN TABLE(TABLAS)                                           *
      *        LIBRARY(MCORNER.DB2.DCLGEN(TABLAS))                     *
      *        ACTION(REPLACE)                                         *
      *        LANGUAGE(COBOL)                                         *
      *        NAMES(TB-)                                              *
      *        STRUCTURE(TB-TABLAS)                                    *
      *        QUOTE                                                   *
      *        COLSUFFIX(YES)                                          *
      * ... IS THE DCLGEN COMMAND THAT MADE THE FOLLOWING STATEMENTS   *
      ******************************************************************
      *****EXEC SQL DECLARE TABLAS TABLE
      *****( TABLA                          CHAR(8) NOT NULL,
      *****  CLAVE1                         CHAR(8) NOT NULL,
      *****  CLAVE2                         CHAR(8),
      *****  CLAVE3                         CHAR(8),
      *****  VALOR                          CHAR(64) NOT NULL
      *****) END-EXEC.
      ******************************************************************
      * COBOL DECLARATION FOR TABLE TABLAS                             *
      ******************************************************************
       01  TB-TABLAS.
      *                       TABLA
           10 TB-TABLA             PIC X(8).
      *                       CLAVE1
           10 TB-CLAVE1            PIC X(8).
      *                       CLAVE2
           10 TB-CLAVE2            PIC X(8).
      *                       CLAVE3
           10 TB-CLAVE3            PIC X(8).
      *                       VALOR
           10 TB-VALOR             PIC X(64).
      ******************************************************************
      * THE NUMBER OF COLUMNS DESCRIBED BY THIS DECLARATION IS 5       *
      ******************************************************************
      *--- TXMUL <-
      *--- Zona DB2 fin -----------------------------------------------
      *
       01  FILLER                          PIC X(19)
           VALUE '***START-WORKING***'.
      *
       01  WC-CONSTANTES.
           03  WC-PROGRAMA                 PIC X(8)  VALUE 'PHOLY'.
           03  WC-TRANSACCION              PIC X(4)  VALUE 'HOLY'.
           03  WC-RECURSO-HOL              PIC X(4)  VALUE 'HOL*'.
      *--- USER ->
      *    03  WC-LONGITUD-TITULO          PIC 99    VALUE 58.
      *--- USER <-
      *
       01  SW-SWITCHES.
      *
           03 SW-ENVIO-MAPA                PIC X    VALUE '0'.
              88 ENVIO-ERASE                        VALUE '1'.
              88 ENVIO-DATAONLY                     VALUE '2'.
      *
       01  WL-LITERALES.
           03 WL-FIN-SESION                PIC X(80) VALUE
           'La transacci¢n HOLY ha finalizado...'.
      *
      *--- Zona para CALLs --------------------------------------------
      *
           COPY LKCENTI.
      *
      *--- Zona para cola TS ------------------------------------------
      *
           COPY TSHOLL.
      *
      * Zona especial para CICS -> SPOOL
      *
       01  RESP                            PIC 9(8)   BINARY.
       01  RESP2                           PIC 9(8)   BINARY.
       01  TOKEN                           PIC X(8).
       01  OUTLEN                          PIC S9(8)  BINARY VALUE 133.
       77  OUTPRT                          PIC X(133).
       01  PARMSPTR                                   POINTER.
       01  PARMS-AREA.
           03  PARMSLEN                    PIC S9(8)  BINARY VALUE 8.
           03  PARMSINF                    PIC X(8)   VALUE SPACES.
           03  PARMADDR                               POINTER.
      *--- TXMUL ->
       77 IND                             PIC 99 VALUE ZERO.
      *--- TXMUL <-
      *
       01 FILLER                           PIC X(17)
           VALUE '***END-WORKING***'.
      *----------------------------------------------------------------
        77 SQL-TEMP      PIC X(128).
        77 DSN-TEMP      PIC S9(9)  COMP-4.
        77 DSN-TMP2      PIC S9(18) COMP-3.
        77 DSNNROWS      PIC S9(9)  COMP-4.
        77 DSNNTYPE      PIC S9(4)  COMP-4.
        77 DSNNLEN       PIC S9(4)  COMP-4.
        77 SQL-NULL      PIC S9(9) COMP-4 VALUE +0.
        77 SQL-INIT-FLAG PIC S9(4) COMP-4 VALUE +0.
           88 SQL-INIT-DONE VALUE +1.
        77 SQL-FILE-READ      PIC S9(9) COMP-4 VALUE +2.
        77 SQL-FILE-CREATE    PIC S9(9) COMP-4 VALUE +8.
        77 SQL-FILE-OVERWRITE PIC S9(9) COMP-4 VALUE +16.
        77 SQL-FILE-APPEND    PIC S9(9) COMP-4 VALUE +32.
        01 SQL-PLIST6.
           05 SQL-PLIST-CON   PIC S9(9) COMP-4 VALUE +4210688.
           05 SQL-CALLTYPE    PIC S9(4) COMP-4 VALUE +50.
           05 SQL-PROG-NAME   PIC X(8)  VALUE X'50484F4C59202020'.
           05 SQL-TIMESTAMP-1 PIC S9(9) COMP-4 VALUE +469383595.
           05 SQL-TIMESTAMP-2 PIC S9(9) COMP-4 VALUE +455712768.
           05 SQL-SECTION     PIC S9(4) COMP-4 VALUE +1.
           05 SQL-CODEPTR     PIC S9(9) COMP-4.
           05 SQL-VPARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 SQL-APARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 FILLER          PIC S9(4) COMP-4 VALUE +1208.
           05 SQL-STMT-TYPE   PIC S9(4) COMP-4 VALUE +3.
           05 SQL-STMT-NUM    PIC S9(9) COMP-4 VALUE +939.
           05 SQL-PLIST-FLG   PIC S9(4) COMP-4 VALUE +0.
           05 FILLER          PIC X(18) VALUE
              X'000000000000000000000000000000000000'.
           05 SQL-PVAR-LIST6.
              10 PRE-SQLDAID  PIC X(8)  VALUE 'SQLDA  Ê'.
              10 PRE-SQLDABC  PIC S9(9) COMP-4 VALUE +60.
              10 PRE-SQLN     PIC S9(4) COMP-4 VALUE +1.
              10 PRE-SQLLD    PIC S9(4) COMP-4 VALUE +1.
              10 PRE-SQLVAR.
                12 SQLVAR-BASE1.
                  15 SQL-PVAR-TYPE1      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-PVAR-LEN1       PIC S9(4) COMP-4 VALUE +8.
                  15 SQL-PVAR-ADDRS1.
                     20 SQL-PVAR-ADDR1   PIC S9(9) COMP-4.
                     20 SQL-PVAR-IND1    PIC S9(9) COMP-4.
                  15 SQL-PVAR-NAME1.
                     20 SQL-PVAR-NAMEL1  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-PVAR-NAMEC1  PIC X(30) VALUE ' '.
        01 SQL-PLIST7.
           05 SQL-PLIST-CON   PIC S9(9) COMP-4 VALUE +4195328.
           05 SQL-CALLTYPE    PIC S9(4) COMP-4 VALUE +30.
           05 SQL-PROG-NAME   PIC X(8)  VALUE X'50484F4C59202020'.
           05 SQL-TIMESTAMP-1 PIC S9(9) COMP-4 VALUE +469383595.
           05 SQL-TIMESTAMP-2 PIC S9(9) COMP-4 VALUE +455712768.
           05 SQL-SECTION     PIC S9(4) COMP-4 VALUE +1.
           05 SQL-CODEPTR     PIC S9(9) COMP-4.
           05 SQL-VPARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 SQL-APARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 FILLER          PIC S9(4) COMP-4 VALUE +1208.
           05 SQL-STMT-TYPE   PIC S9(4) COMP-4 VALUE +4.
           05 SQL-STMT-NUM    PIC S9(9) COMP-4 VALUE +949.
           05 SQL-PLIST-FLG   PIC S9(4) COMP-4 VALUE +0.
           05 FILLER          PIC X(18) VALUE
              X'000000000000000000000000000000000000'.
           05 SQL-AVAR-LIST7.
              10 PRE-SQLDAID  PIC X(8)  VALUE 'SQLDA  Ê'.
              10 PRE-SQLDABC  PIC S9(9) COMP-4 VALUE +148.
              10 PRE-SQLN     PIC S9(4) COMP-4 VALUE +3.
              10 PRE-SQLLD    PIC S9(4) COMP-4 VALUE +3.
              10 PRE-SQLVAR.
                12 SQLVAR-BASE1.
                  15 SQL-AVAR-TYPE1      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-AVAR-LEN1       PIC S9(4) COMP-4 VALUE +8.
                  15 SQL-AVAR-ADDRS1.
                     20 SQL-AVAR-ADDR1   PIC S9(9) COMP-4.
                     20 SQL-AVAR-IND1    PIC S9(9) COMP-4.
                  15 SQL-AVAR-NAME1.
                     20 SQL-AVAR-NAMEL1  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-AVAR-NAMEC1  PIC X(30) VALUE ' '.
                12 SQLVAR-BASE2.
                  15 SQL-AVAR-TYPE2      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-AVAR-LEN2       PIC S9(4) COMP-4 VALUE +8.
                  15 SQL-AVAR-ADDRS2.
                     20 SQL-AVAR-ADDR2   PIC S9(9) COMP-4.
                     20 SQL-AVAR-IND2    PIC S9(9) COMP-4.
                  15 SQL-AVAR-NAME2.
                     20 SQL-AVAR-NAMEL2  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-AVAR-NAMEC2  PIC X(30) VALUE ' '.
                12 SQLVAR-BASE3.
                  15 SQL-AVAR-TYPE3      PIC S9(4) COMP-4 VALUE +452.
                  15 SQL-AVAR-LEN3       PIC S9(4) COMP-4 VALUE +64.
                  15 SQL-AVAR-ADDRS3.
                     20 SQL-AVAR-ADDR3   PIC S9(9) COMP-4.
                     20 SQL-AVAR-IND3    PIC S9(9) COMP-4.
                  15 SQL-AVAR-NAME3.
                     20 SQL-AVAR-NAMEL3  PIC S9(4) COMP-4 VALUE +0.
                     20 SQL-AVAR-NAMEC3  PIC X(30) VALUE ' '.
        01 SQL-PLIST8.
           05 SQL-PLIST-CON   PIC S9(9) COMP-4 VALUE +4194304.
           05 SQL-CALLTYPE    PIC S9(4) COMP-4 VALUE +45.
           05 SQL-PROG-NAME   PIC X(8)  VALUE X'50484F4C59202020'.
           05 SQL-TIMESTAMP-1 PIC S9(9) COMP-4 VALUE +469383595.
           05 SQL-TIMESTAMP-2 PIC S9(9) COMP-4 VALUE +455712768.
           05 SQL-SECTION     PIC S9(4) COMP-4 VALUE +1.
           05 SQL-CODEPTR     PIC S9(9) COMP-4.
           05 SQL-VPARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 SQL-APARMPTR    PIC S9(9) COMP-4 VALUE +0.
           05 FILLER          PIC S9(4) COMP-4 VALUE +1208.
           05 SQL-STMT-TYPE   PIC S9(4) COMP-4 VALUE +5.
           05 SQL-STMT-NUM    PIC S9(9) COMP-4 VALUE +960.
           05 SQL-PLIST-FLG   PIC S9(4) COMP-4 VALUE +0.
           05 FILLER          PIC X(18) VALUE
              X'000000000000000000000000000000000000'.

       LINKAGE SECTION.
      *
       01 DFHCOMMAREA                      PIC X(2048).
      *
      *================================================================
       PROCEDURE DIVISION.
      *----------------------------------------------------------------
      *--- Proceso principal                                        ---
      *----------------------------------------------------------------
       DSNSQL SECTION.
       SQL-SKIP.
           GO TO SQL-INIT-END.
       SQL-INITIAL.
           MOVE 1 TO SQL-INIT-FLAG.
           CALL 'DSNHADDR' USING SQL-VPARMPTR OF SQL-PLIST6 SQL-PVAR-LIS
      -    T6.
           CALL 'DSNHADD2' USING SQL-PVAR-ADDRS1 IN
           SQL-PVAR-LIST6 TB-CLAVE1 OF TB-TABLAS SQL-NULL
           CALL 'DSNHADDR' USING SQL-CODEPTR OF SQL-PLIST6 SQLCA.
           CALL 'DSNHADDR' USING SQL-APARMPTR OF SQL-PLIST7 SQL-AVAR-LIS
      -    T7.
           CALL 'DSNHADD2' USING SQL-AVAR-ADDRS1 IN
           SQL-AVAR-LIST7 TB-CLAVE2 OF TB-TABLAS SQL-NULL TB-CLAVE3 OF T
      -    B-TABLAS SQL-NULL TB-VALOR OF TB-TABLAS SQL-NULL.
           CALL 'DSNHADDR' USING SQL-CODEPTR OF SQL-PLIST7 SQLCA.
           CALL 'DSNHADDR' USING SQL-CODEPTR OF SQL-PLIST8 SQLCA.
       SQL-INIT-END.
           CONTINUE.

       0000-PROCESO-TAREA.
      *
      *****EXEC SQL
      *****     INCLUDE PDOPCIDB
      *****END-EXEC
      *----------------------------------------------------------------
      *--- CONTROL DE OPCIONES PARA PROGRAMAS CICS CON DB2          ---
      *--- VERSION 1.0
      *----------------------------------------------------------------
      *--- INCLUIR ESTE COPY CON INCLUDE DE SQL EN TODOS LOS        ---
      *--- PROGRAMAS COBOL CON DB2 DENTRO DE LA PROCEDURE DIVISION. ---
      *--- AL METERLO CON INCLUDE DE SQL, EL PRE-COMPILADOR SQL     ---
      *--- LO TRADUCE Y, POR LO TANTO, SE PUEDEN UTILIZAR COMANDOS  ---
      *--- CICS IGUALMENTE.                                         ---
      *----------------------------------------------------------------
      *
           EXEC CICS
                SET TERMINAL(EIBTRMID) NOUCTRAN
           END-EXEC
      *
           EXEC CICS
                IGNORE CONDITION MAPFAIL
           END-EXEC
      *
      *****EXEC SQL
      *****     WHENEVER  SQLERROR    GO TO  G999-ERROR-DB2
      *****END-EXEC
      *
      *****EXEC SQL
      *****     WHENEVER  SQLWARNING  GO TO  G999-ERROR-DB2
      *****END-EXEC
      *
      *****EXEC SQL
      *****     WHENEVER  NOT FOUND   CONTINUE
      *****END-EXEC
      *
           CONTINUE.
      *
      *
           MOVE WC-TRANSACCION             TO WA-TRANSACCION
      *
           IF EIBCALEN > 0
              MOVE DFHCOMMAREA             TO CH-COMMAREA-HOL
           END-IF
      *
      *--- Informamos el nombre de la cola TS (TRANS + TERM)
      *
           MOVE TH-TRN-LISTADO             TO LTS-TRANSACCION
           MOVE TH-TRN-VISUAL-LIST         TO LTR-TRANSACCION
           MOVE EIBTRMID                   TO LTS-TERMINAL
           MOVE EIBTRMID                   TO LTR-TERMINAL
      *
      *--- Evaluacion de Commarea y Teclas para identificar
      *--- los procesos que deban de ejecutarse
      *
           EVALUATE TRUE
      *
      *--- No hay Commarea
      *--- Se inicializa la Commarea y se envia mapa limpio
      *
               WHEN EIBCALEN = ZERO
                    MOVE LOW-VALUE         TO HOLYMPO
                    MOVE DFHRED            TO MSGC
      *--- TXMUL ->
                    MOVE 'HOLYARR'          TO CL-CLAVE1
                    PERFORM 20100-OBTENER-TEXTO
                    MOVE CL-VALOR          TO MSGO
      *             MOVE 'Para arrancar HOLY utiliza HOLM... F3'
      *               TO MSGO
      *--- TXMUL <-
                    SET ENVIO-ERASE        TO TRUE
                    PERFORM 8000-ENVIO-MAPA
      *
      *--- Artima¤a para forzar la vuelta
      *
               WHEN CH-Y-RETORNO = '99'
                    PERFORM 1200-PROCESO-VOLVER
      *
      *--- Hay Commarea
      *--- El programa ha podido ser arrancado por XCTL desde otro
      *--- programa. en este caso la transaccion actual ser  la del
      *--- programa que ha llamado a este hasta que se haga un
      *--- RETURN TRANSID
      *
               WHEN EIBCALEN > 0 AND EIBTRNID NOT = WC-TRANSACCION
                    MOVE LOW-VALUE         TO HOLYMPO
                    SET ENVIO-ERASE        TO TRUE
                    PERFORM 0100-POR-DEFECTO
                    PERFORM 8000-ENVIO-MAPA
      *
      *--- Borrado de pantalla  - Mensaje y retorno a CICS
      *--- F3 tambien puede terminar esta transaccion
      *
               WHEN EIBAID = DFHCLEAR
                    MOVE LOW-VALUE         TO HOLYMPO
                    PERFORM 8100-ENVIA-MENSAJE
                    PERFORM 8900-RETORNO-CICS
      *
      *--- Teclas de Att no hacemos nada
      *
               WHEN EIBAID = DFHPA1 OR DFHPA2 OR DFHPA3
                    CONTINUE
      *
      *--- Teclas de funcion Legales
      *--- Teclas que requieren un procesado del mapa
      *
               WHEN EIBAID = DFHENTER
                 OR EIBAID = DFHPF1
                 OR EIBAID = DFHPF3
                    PERFORM 1000-PROCESO-MAPA
      *
      *--- Teclas ilegales
      *--- Teclas no programadas que se detectaran en proceso de mapa
      *
               WHEN OTHER
                    PERFORM 1000-PROCESO-MAPA
      *
           END-EVALUATE
      *
      *--- Terminamos el proceso con Return TransId
      *--- Volvemos a enganchar esta misma transaccion
      *
           PERFORM 8200-RETORNO-TRANS.
      *
       0000-PROCESO-TAREA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Rellenamos el mapa con datos por defecto o iniciales     ---
      *--- Leemos la cola LTR resumen del £tlimo listado ejecutado  ---
      *----------------------------------------------------------------
       0100-POR-DEFECTO.
      *
           MOVE 1                          TO LTR-ITEM
           PERFORM 6000-ENQ-RECURSO
      *
           PERFORM 2100-LEER-ITEM-LTR
      *
           IF EIBRESP NOT = RESP-OK
              MOVE DFHRED               TO MSGC
      *--- TXMUL ->
              MOVE 'NLISPRIN'           TO CL-CLAVE1
              PERFORM 20100-OBTENER-TEXTO
              MOVE CL-VALOR             TO MSGO
      *       MOVE 'No hay ning£n lisado para imprimir...F3'
      *         TO MSGO
      *--- TXMUL <-
           END-IF
      *
           PERFORM 6100-DEQ-RECURSO.
      *
       0100-POR-DEFECTO-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Proceso del Mapa                                         ---
      *----------------------------------------------------------------
       1000-PROCESO-MAPA.
      *
      * Recuperamos el mapa desde el terminal
      *
           PERFORM 8400-RECIBE-MAPA
           MOVE SPACES                     TO MSGO
      *
           EVALUATE TRUE
      *
      *--- F1 : llamamos al programa de ayuda
      *
              WHEN EIBAID = DFHPF1
                  PERFORM 1100-PROCESO-AYUDA
      *
      *--- F3 : volvemos al menu principal
      *
              WHEN EIBAID = DFHPF3
                  PERFORM 1200-PROCESO-VOLVER
      *
      *--- Enter : Escribimos contenido de cola TS en Spool
      *
              WHEN EIBAID = DFHENTER
                  PERFORM 1400-PROCESO-LISTADO
      *
              WHEN OTHER
                  MOVE DFHRED              TO MSGC
      *--- TXMUL ->
                  MOVE 'KEYERR'            TO CL-CLAVE1
                  PERFORM 20100-OBTENER-TEXTO
                  MOVE CL-VALOR            TO MSGO
      *           MOVE 'Tecla err¢nea...'  TO MSGO
      *--- TXMUL <-
      *
           END-EVALUATE
      *
           SET ENVIO-DATAONLY              TO TRUE
           PERFORM 8000-ENVIO-MAPA.
      *
       1000-PROCESO-MAPA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Llamamos al programa Menu principal                      ---
      *----------------------------------------------------------------
       1100-PROCESO-AYUDA.
      *
           MOVE CS-PGM-AYUDAOL             TO CH-XCTL
           MOVE WC-TRANSACCION             TO CH-TRANSACCION
           MOVE WC-TRANSACCION             TO CH-TRANS-RETORNO
           MOVE WC-PROGRAMA                TO CH-PROGRAMA-RETORNO
           PERFORM 8700-XCTL-PROGRAMA.
      *
       1100-PROCESO-AYUDA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Llamamos al programa Menu principal                      ---
      *----------------------------------------------------------------
       1200-PROCESO-VOLVER.
      *
           MOVE CS-PGM-CLIENTES            TO CH-XCTL
           MOVE WC-TRANSACCION             TO CH-TRANSACCION
           MOVE WC-TRANSACCION             TO CH-TRANS-RETORNO
           MOVE WC-PROGRAMA                TO CH-PROGRAMA-RETORNO
           PERFORM 8700-XCTL-PROGRAMA.
      *
       1200-PROCESO-VOLVER-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Proceso de la p gina siguiente                           ---
      *----------------------------------------------------------------
       1400-PROCESO-LISTADO.
      *
      *--- Proceso inicial
      *
           IF CTRLI = 'OK'
              PERFORM 1200-PROCESO-VOLVER
           END-IF
      *
           PERFORM 6000-ENQ-RECURSO
           MOVE 1                          TO LTS-ITEM
      *
           PERFORM 2000-LEER-ITEM-LTS

           IF EIBRESP = RESP-OK
              PERFORM 3000-ABRE-SPOOL
      *
              PERFORM 1410-LEE-ESCRIBE
                 UNTIL EIBRESP NOT = RESP-OK
      *
              PERFORM 5000-CIERRA-SPOOL
              MOVE '00'                    TO CH-Y-RETORNO
              MOVE 'OK'                    TO CTRLO
              MOVE DFHYELLO                TO MSGC
      *--- TXMUL ->
              MOVE 'LISENSPO'              TO CL-CLAVE1
              PERFORM 20100-OBTENER-TEXTO
              MOVE CL-VALOR                TO MSGO
      *       MOVE 'OK - El listado est  en el Spool o Impresora... F3'
      *         TO MSGO
      *--- TXMUL <-
           ELSE
              MOVE DFHYELLO                TO MSGC
      *--- TXMUL ->
              MOVE 'NLISPRI3'              TO CL-CLAVE1
              PERFORM 20100-OBTENER-TEXTO
              MOVE CL-VALOR                TO MSGO
      *       MOVE 'Por favor pulsa F3. No hay listado para imprimir'
      *         TO MSGO
      *--- TXMUL <-
           END-IF
      *
           PERFORM 6100-DEQ-RECURSO.
      *
       1400-PROCESO-LISTADO-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Lee item de la cola y lo escribe en Spool                ---
      *----------------------------------------------------------------
       1410-LEE-ESCRIBE.
      *
              MOVE LTS-DETALLE             TO OUTPRT
              PERFORM 4000-ESCRIBE-SPOOL
              ADD 1                        TO LTS-ITEM
              PERFORM 2000-LEER-ITEM-LTS.
      *
       1410-LEE-ESCRIBE-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Leer un Item de la cola LTS                              ---
      *----------------------------------------------------------------
       2000-LEER-ITEM-LTS.
      *
           EXEC CICS
                READQ TS
                  QUEUE     (LTS-COLA)
                  INTO      (LTS-DATOS-COLA)
                  LENGTH (LENGTH OF LTS-DATOS-COLA)
                  ITEM      (LTS-ITEM)
                  NOHANDLE
           END-EXEC.
      *
       2000-LEER-ITEM-LTS-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Leer un Item de la cola LTR                              ---
      *----------------------------------------------------------------
       2100-LEER-ITEM-LTR.
      *
            EXEC CICS
                 READQ TS
                   QUEUE    (LTR-COLA)
                   INTO     (LTR-DATOS-COLA)
                   LENGTH (LENGTH OF LTR-DATOS-COLA)
                   ITEM     (LTR-ITEM)
                   NOHANDLE
            END-EXEC.
      *
       2100-LEER-ITEM-LTR-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Abre el archivo de escritura en el Spool                 ---
      *----------------------------------------------------------------
       3000-ABRE-SPOOL.
      *
           MOVE EIBTRMID                   TO PARMSINF
           MOVE 'HOL*'                     TO PARMSINF(5:)
      *
           SET PARMSPTR TO ADDRESS OF PARMS-AREA
           SET PARMADDR TO PARMSPTR
           SET PARMSPTR TO ADDRESS OF PARMADDR
      *
           EXEC CICS SPOOLOPEN OUTPUT
                TOKEN(TOKEN)
                USERID('*')
                NODE('*')
                CLASS('A')
                MCC
                RESP(RESP)
                RESP2(RESP2)
           END-EXEC
      *
           IF EIBRESP NOT = RESP-OK
              MOVE DFHRED              TO MSGC
              MOVE 'Error de apertura del Spool...'
                TO MSGO
           END-IF.
      *
       3000-ABRE-SPOOL-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Escribe una l¡nea en el Spool                            ---
      *----------------------------------------------------------------
       4000-ESCRIBE-SPOOL.
      *
           IF LTS-CONTROL-CARRO = '0'
              EXEC CICS SPOOLWRITE
                   FROM(OUTPRT)
                   NOHANDLE
                   FLENGTH(OUTLEN)
                   PAGE
                   TOKEN(TOKEN)
              END-EXEC
           ELSE
              EXEC CICS SPOOLWRITE
                   FROM(OUTPRT)
                   NOHANDLE
                   FLENGTH(OUTLEN)
                   LINE
                   TOKEN(TOKEN)
              END-EXEC
           END-IF.
      *
           IF EIBRESP NOT = RESP-OK
              MOVE DFHRED              TO MSGC
      *--- TXMUL ->
              MOVE 'ERRSPOOL'          TO CL-CLAVE1
              PERFORM 20100-OBTENER-TEXTO
              MOVE CL-VALOR            TO MSGO
      *       MOVE 'Error de escritura en Spool...'
      *         TO MSGO
      *--- TXMUL <-
           END-IF.
      *
       4000-ESCRIBE-SPOOL-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Cierra el archivo de Spool                               ---
      *----------------------------------------------------------------
       5000-CIERRA-SPOOL.
      *
           EXEC CICS SPOOLCLOSE
                TOKEN(TOKEN)
                NOHANDLE
           END-EXEC
      *
           IF EIBRESP NOT = RESP-OK
              MOVE DFHRED              TO MSGC
      *--- TXMUL ->
              MOVE 'ERRCSPOO'          TO CL-CLAVE1
              PERFORM 20100-OBTENER-TEXTO
              MOVE CL-VALOR            TO MSGO
      *       MOVE 'Error de cierre de Spool...'
      *         TO MSGO
      *--- TXMUL <-
           END-IF.
      *
       5000-CIERRA-SPOOL-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Encola recurso comun                                     ---
      *----------------------------------------------------------------
       6000-ENQ-RECURSO.
      *
           EXEC CICS
                ENQ
                RESOURCE   (WC-RECURSO-HOL)
                LENGTH     (4)
           END-EXEC.
      *
       6000-ENQ-RECURSO-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Desencola recurso comun                                  ---
      *----------------------------------------------------------------
       6100-DEQ-RECURSO.
      *
           EXEC CICS
                DEQ
                RESOURCE   (WC-RECURSO-HOL)
                LENGTH     (4)
           END-EXEC.
      *
       6100-DEQ-RECURSO-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Envia el mapa al terminal sergun modo del switch         ---
      *----------------------------------------------------------------
       8000-ENVIO-MAPA.
      *
           MOVE +771                       TO CH-CURPOS
      *
           EVALUATE TRUE
      *
      *--- Envio de mapa limpio
      *
               WHEN ENVIO-ERASE
      *
      *--- TXMUL ->
                   MOVE 50 TO RTC-CENTER-AREA
                   PERFORM 20000-TITULO-MAPA
      * Carga de los textos fijos del mapa
                   MOVE WC-TRANSACCION TO TB-CLAVE1
                   PERFORM 20200-OPEN-CURSOR-MAPS
                   PERFORM WITH TEST AFTER UNTIL SQLCODE = 100
                       PERFORM 20200-FETCH-CURSOR-MAPS
                       IF SQLCODE NOT = 100 AND
                          TB-CLAVE3 = CL-IDIOMA THEN
                          ADD 1 TO IND
                          EVALUATE IND
                             WHEN 1
                                MOVE TB-VALOR TO TX10O
                             WHEN 2
                                MOVE TB-VALOR TO TX20O
                             WHEN 3
                                MOVE TB-VALOR TO TX30O
                          END-EVALUATE
                       END-IF
                   END-PERFORM
                   PERFORM 20200-CLOSE-CURSOR-MAPS
      *--- TXMUL <-
                   IF EIBCALEN = 0
                      MOVE '99'            TO CH-Y-RETORNO
                   END-IF
      *
                   EXEC CICS
                       SEND MAP    ('HOLYMP')
                            MAPSET ('HOLYMP')
                            FROM   (HOLYMPO)
                            CURSOR (CH-CURPOS)
                            ERASE
                   END-EXEC
      *
      *--- Envio del mapa Solo datos
      *
               WHEN ENVIO-DATAONLY
      *
                   EXEC CICS
                       SEND MAP     ('HOLYMP')
                            MAPSET  ('HOLYMP')
                            FROM    (HOLYMPO)
                            CURSOR  (CH-CURPOS)
                            DATAONLY
                   END-EXEC
      *
           END-EVALUATE.
      *
       8000-ENVIO-MAPA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Envia un mensaje al terminal del usuario (fin sesion)    ---
      *----------------------------------------------------------------
       8100-ENVIA-MENSAJE.
      *
      *--- TXMUL ->
           MOVE 'HOLYEND'                  TO CL-CLAVE1.
           PERFORM 20100-OBTENER-TEXTO.
           MOVE CL-VALOR                   TO WL-FIN-SESION.
      * 'La transaccion HOLY ha finalizado...'
           EXEC CICS
               SEND TEXT FROM(WL-FIN-SESION)
                         ERASE
                         FREEKB
           END-EXEC.
      *
       8100-ENVIA-MENSAJE-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Devuelve el control a una transaccion                    ---
      *----------------------------------------------------------------
       8200-RETORNO-TRANS.
      *
           EXEC CICS
                SET TERMINAL(EIBTRMID) TRANIDONLY
           END-EXEC
      *
           EXEC CICS
               RETURN
               TRANSID      (WA-TRANSACCION)
               COMMAREA     (CH-COMMAREA-HOL)
           END-EXEC.
      *
       8200-RETORNO-TRANS-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Recibe el mapa de la tarea                               ---
      *----------------------------------------------------------------
       8400-RECIBE-MAPA.
      *
           EXEC CICS
                RECEIVE
                MAP     ('HOLYMP')
                MAPSET  ('HOLYMP')
                INTO    (HOLYMPI)
           END-EXEC.
      *
       8400-RECIBE-MAPA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Llama a otro programa CICS por LINK con Commarea         ---
      *----------------------------------------------------------------
       8500-LINK-PROGRAMA.
      *
           EXEC CICS
                LINK
                PROGRAM (CH-LINK)
                COMMAREA(CH-COMMAREA-HOL)
                LENGTH  (LENGTH OF CH-COMMAREA-HOL)
           END-EXEC.
      *
       8500-LINK-PROGRAMA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Cede el control a otro programa CICS                     ---
      *----------------------------------------------------------------
       8700-XCTL-PROGRAMA.
      *
           EXEC CICS
                SET TERMINAL(EIBTRMID) UCTRAN
           END-EXEC
      *
           EXEC CICS
               XCTL PROGRAM  (CH-XCTL)
                    COMMAREA (CH-COMMAREA-HOL)
                    RESP     (WA-RESPUESTA-CICS)
           END-EXEC.
      *
       8700-XCTL-PROGRAMA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- CEDF visualiza una traza - Quitar para produccion        ---
      *----------------------------------------------------------------
       8800-TRAZA.
      *
           EXEC CICS
               ENTER       TRACEID(0)
               FROM        (WA-TRAZA)
           END-EXEC.
      *
       8800-TRAZA-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Devuelve el control a CICS - Salida total                ---
      *----------------------------------------------------------------
       8900-RETORNO-CICS.
      *
           EXEC CICS
                SET TERMINAL(EIBTRMID) UCTRAN
           END-EXEC
      *
           EXEC CICS
                RETURN
           END-EXEC.
      *
       8900-RETORNO-CICS-EXIT.
           EXIT.
      *--- TXMUL ->
      *
      * Rutinas multiidioma
      *
      *****EXEC SQL
      *****     INCLUDE PTXMUL
      *****END-EXEC.
      *****************************************************************
      **  PROYECTO .........: HOL                                    **
      **  PROGRAMA .........: FPROC1                                 **
      **  VERSION ..........: 1.0                                    **
      **  TITULO ...........: PROCEDIMIENTOS COMPARTIDOS             **
      **                                                             **
      **  TIPO .............:                                        **
      **     - LENGUAJE ...............: COBOL II                    **
      **     - ENTORNO ................: CICS                        **
      **     - BASE DE DATOS ..........: DB2                         **
      **                                                             **
      **  DESCRIPCION ......:                                        **
      **                                                             **
      **    - Procedimientos de uso general en programas.            **
      **                                                             **
      **  LOG DE MODIFICACIONES:                                     **
      **  FECHA----- DESCRIPCION------------------------------ BUSCA **
      **  2024-08-19 Adaptaci¢n multiidioma (MOSSA)            TXMUL **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      **                                                             **
      *****************************************************************
      *--- TXMUL ->
      *----------------------------------------------------------------
      *--- Recuperar el titulo del mapa LNKTL    de tabla: TABLAS   ---
      *----------------------------------------------------------------
       20000-TITULO-MAPA.
      *==================
           PERFORM 20000-TITULO-MAPA-INI.
           PERFORM 20000-TITULO-MAPA-FIN.
       20000-TITULO-MAPA-EXIT.
           EXIT.
      *
       20000-TITULO-MAPA-INI.
      *======================
      *
           MOVE '100000-TITULO-MAPA'         TO WA-PARRAFO.
           MOVE DB2-TABLA-TITULOS            TO CL-TABLA.
           MOVE WC-TRANSACCION               TO CL-CLAVE1.
           MOVE LOW-VALUES                   TO CL-CLAVE2.
           MOVE CL-IDIOMA                    TO CL-CLAVE3.
           MOVE CS-PGM-TABLA-TITULO          TO CH-LINK.
      *
       20000-TITULO-MAPA-INI-EXIT.
           EXIT.
      *
       20000-TITULO-MAPA-FIN.
      *=======================
      *
           PERFORM 8500-LINK-PROGRAMA.
      *
           EVALUATE TRUE
              WHEN CL-RESULTADO = '00' OR CL-RESULTADO = '01'
      *--- USER ->
      *            MOVE WC-LONGITUD-TITULO
      *              TO LKC-LONGITUD-RESULTADO
      *--- USER <-
      *
      *--- Centrado del titulo del mapa CALL
                   MOVE CL-VALOR           TO RTC-INPUT-STRING
                   CALL CS-PGM-CALL-RTCENTI USING RTC-CENTI
                   IF RTC-RESULT = ZERO THEN
                      MOVE RTC-OUTPUT-STRING TO TITLEO
                   ELSE
                      MOVE RTC-INPUT-STRING  TO TITLEO
                   END-IF
      *
              WHEN CL-RESULTADO = '99'
                   MOVE '20000-TITULO-MAPA'         TO WA-PARRAFO
                   MOVE 'LNKTITLE KO'               TO CH-E-ACCION,
      *--- TXMUL ->
                                                       CL-VALOR
      *--- TXMUL <-
                   MOVE -999999999                  TO SQLCODE
                   MOVE 'SQLMSG?'                   TO SQLERRMC
                   PERFORM G999-ERROR-DB2
           END-EVALUATE.
      *--- Mostrar el usuario en la esquina superior izquierda
           MOVE SPACES TO USERO.
           STRING "(" US-USER ")"
                  DELIMITED BY SPACES
                INTO USERO
           END-STRING.
      *
       20000-TITULO-MAPA-FIN-EXIT.
           EXIT.
      *
      *----------------------------------------------------------------
      *--- Obtener texto fijo con prog LNKTL     de tabla: TABLAS   ---
      *----------------------------------------------------------------
       20100-OBTENER-TEXTO.
      *
           MOVE '20100-OBTENER-TEXTO'        TO WA-PARRAFO.
           MOVE DB2-TABLA-PROGRMSG           TO CL-TABLA.
           MOVE LOW-VALUES                   TO CL-CLAVE2.
           MOVE CL-IDIOMA                    TO CL-CLAVE3.
           MOVE CS-PGM-TABLA-TITULO          TO CH-LINK.
           PERFORM 8500-LINK-PROGRAMA.
           IF CL-RESULTADO = '99' THEN
              IF CS-PGM-TABLA-TITULO NOT = CS-PGM-ERROR THEN
                 MOVE '20100-OBTENER-TEXTO'       TO WA-PARRAFO
                 MOVE 'LNKTEXTO KO'               TO CH-E-ACCION,
                                                     CL-VALOR
                 MOVE -999999999                  TO SQLCODE
                 MOVE 'SQLMSG?'                   TO SQLERRMC
                 PERFORM G999-ERROR-DB2
              ELSE
                 MOVE 'FATAL ERROR' TO MSGO
                 SET ENVIO-DATAONLY TO TRUE
                 PERFORM 8000-ENVIO-MAPA
              END-IF
           END-IF.
      *
       20100-OBTENER-TEXTO-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- Declaraci¢n y apertura del cursor de textos para mapas   ---
      *----------------------------------------------------------------
       20200-OPEN-CURSOR-MAPS.
      *****EXEC SQL
      *****   DECLARE TXT-CUR CURSOR FOR
      *****      SELECT CLAVE2, CLAVE3, VALOR
      *****        FROM TABLAS
      *****        WHERE TABLA = 'TEXTOMAP'
      *****          AND CLAVE1 = :TB-CLAVE1
      *****END-EXEC.
      *
      *****EXEC SQL
      *****   OPEN TXT-CUR
      *****END-EXEC.
           PERFORM SQL-INITIAL UNTIL SQL-INIT-DONE
           CALL 'DSNHLI' USING SQL-PLIST6
           IF SQLCODE < 0 GO TO G999-ERROR-DB2 ELSE
           IF SQLCODE > 0 AND SQLCODE NOT = 100
           OR SQLWARN0 = 'W' GO TO G999-ERROR-DB2 ELSE
           MOVE 1 TO SQL-INIT-FLAG
           END-IF
           END-IF.
       20200-OPEN-CURSOR-MAPS-FIN.
           EXIT.
      *----------------------------------------------------------------
      *--- Fetch del cursor para obtener textos para mapas          ---
      *----------------------------------------------------------------
       20200-FETCH-CURSOR-MAPS.
      *
      *****EXEC SQL
      *****   FETCH TXT-CUR
      *****      INTO :TB-CLAVE2, :TB-CLAVE3, :TB-VALOR
      *****END-EXEC.
           PERFORM SQL-INITIAL UNTIL SQL-INIT-DONE
           CALL 'DSNHLI' USING SQL-PLIST7
           IF SQLCODE < 0 GO TO G999-ERROR-DB2 ELSE
           IF SQLCODE > 0 AND SQLCODE NOT = 100
           OR SQLWARN0 = 'W' GO TO G999-ERROR-DB2 ELSE
           MOVE 1 TO SQL-INIT-FLAG
           END-IF
           END-IF.
       20200-FETCH-CURSOR-MAPS-FIN.
           EXIT.
      *----------------------------------------------------------------
      *--- Cierre del cursor para obtener textos para mapas         ---
      *----------------------------------------------------------------
       20200-CLOSE-CURSOR-MAPS.
      *
      *****EXEC SQL
      *****   CLOSE TXT-CUR
      *****END-EXEC.
           PERFORM SQL-INITIAL UNTIL SQL-INIT-DONE
           CALL 'DSNHLI' USING SQL-PLIST8
           IF SQLCODE < 0 GO TO G999-ERROR-DB2 ELSE
           IF SQLCODE > 0 AND SQLCODE NOT = 100
           OR SQLWARN0 = 'W' GO TO G999-ERROR-DB2 ELSE
           MOVE 1 TO SQL-INIT-FLAG
           END-IF
           END-IF.
       20200-CLOSE-CURSOR-MAPS-FIN.
           EXIT.
      *--- TXMUL <-
      *
       999999-DB2-ERRORES SECTION.
      *--- TXMUL <-
      *----------------------------------------------------------------
      *--- DB2 Errores y otros                                      ---
      *----------------------------------------------------------------
      *****EXEC SQL
      *****     INCLUDE PDDB2
      *****END-EXEC.
      *----------------------------------------------------------------
      *--- ERROR DE DB2 EN ALGUNA PARTE DEL CODIGO COBOL
      *--- VERSION 1.0
      *----------------------------------------------------------------
       G999-ERROR-DB2.
      *
           MOVE WA-PARRAFO              TO CH-E-PARRAFO
           MOVE SQLCODE                 TO DB2-CODE
           MOVE DB2-CODE                TO DB2-CODE-EDIT
           MOVE DB2-CODE-EDIT           TO CH-E-CODIGO
           MOVE SQLERRMC                TO CH-E-MENSAJE
           MOVE WC-PROGRAMA             TO CH-E-PROGRAMA
           MOVE WC-TRANSACCION          TO CH-E-TRANSACCION
           MOVE CS-PGM-ERROR            TO CH-XCTL
           MOVE WC-TRANSACCION          TO CH-TRANS-RETORNO
           MOVE WC-PROGRAMA             TO CH-PROGRAMA-RETORNO
           PERFORM 8700-XCTL-PROGRAMA.
      *----------------------------------------------------------------
       G999-ERROR-DB2-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *--- ERROR DE CICS EN ALGUNA PARTE DEL CODIGO COBOL
      *----------------------------------------------------------------
       G888-ERROR-CICS.
      *
           MOVE WA-PARRAFO              TO CH-E-PARRAFO
           MOVE EIBRESP                 TO DB2-CODE
           MOVE DB2-CODE                TO DB2-CODE-EDIT
           MOVE DB2-CODE-EDIT           TO CH-E-CODIGO
      *->  MOVE SQLERRMC                TO CH-E-MENSAJE
           MOVE WC-PROGRAMA             TO CH-E-PROGRAMA
           MOVE WC-TRANSACCION          TO CH-E-TRANSACCION
           MOVE CS-PGM-ERROR            TO CH-XCTL
           MOVE WC-TRANSACCION          TO CH-TRANS-RETORNO
           MOVE WC-PROGRAMA             TO CH-PROGRAMA-RETORNO
           PERFORM 8700-XCTL-PROGRAMA.
      *
       G888-ERROR-CCIS-EXIT.
           EXIT.
      *----------------------------------------------------------------
      *----------------------------------------------------------------
      *-------------------- FIN DE PROGRAMA  --------------------------
      *----------------------------------------------------------------
